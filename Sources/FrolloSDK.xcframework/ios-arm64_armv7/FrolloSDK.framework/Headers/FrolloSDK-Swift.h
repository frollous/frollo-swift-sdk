#if 0
#elif defined(__arm64__) && __arm64__
// Generated by Apple Swift version 5.3.2 (swiftlang-1200.0.45 clang-1200.0.32.28)
#ifndef FROLLOSDK_SWIFT_H
#define FROLLOSDK_SWIFT_H
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wgcc-compat"

#if !defined(__has_include)
# define __has_include(x) 0
#endif
#if !defined(__has_attribute)
# define __has_attribute(x) 0
#endif
#if !defined(__has_feature)
# define __has_feature(x) 0
#endif
#if !defined(__has_warning)
# define __has_warning(x) 0
#endif

#if __has_include(<swift/objc-prologue.h>)
# include <swift/objc-prologue.h>
#endif

#pragma clang diagnostic ignored "-Wauto-import"
#include <Foundation/Foundation.h>
#include <stdint.h>
#include <stddef.h>
#include <stdbool.h>

#if !defined(SWIFT_TYPEDEFS)
# define SWIFT_TYPEDEFS 1
# if __has_include(<uchar.h>)
#  include <uchar.h>
# elif !defined(__cplusplus)
typedef uint_least16_t char16_t;
typedef uint_least32_t char32_t;
# endif
typedef float swift_float2  __attribute__((__ext_vector_type__(2)));
typedef float swift_float3  __attribute__((__ext_vector_type__(3)));
typedef float swift_float4  __attribute__((__ext_vector_type__(4)));
typedef double swift_double2  __attribute__((__ext_vector_type__(2)));
typedef double swift_double3  __attribute__((__ext_vector_type__(3)));
typedef double swift_double4  __attribute__((__ext_vector_type__(4)));
typedef int swift_int2  __attribute__((__ext_vector_type__(2)));
typedef int swift_int3  __attribute__((__ext_vector_type__(3)));
typedef int swift_int4  __attribute__((__ext_vector_type__(4)));
typedef unsigned int swift_uint2  __attribute__((__ext_vector_type__(2)));
typedef unsigned int swift_uint3  __attribute__((__ext_vector_type__(3)));
typedef unsigned int swift_uint4  __attribute__((__ext_vector_type__(4)));
#endif

#if !defined(SWIFT_PASTE)
# define SWIFT_PASTE_HELPER(x, y) x##y
# define SWIFT_PASTE(x, y) SWIFT_PASTE_HELPER(x, y)
#endif
#if !defined(SWIFT_METATYPE)
# define SWIFT_METATYPE(X) Class
#endif
#if !defined(SWIFT_CLASS_PROPERTY)
# if __has_feature(objc_class_property)
#  define SWIFT_CLASS_PROPERTY(...) __VA_ARGS__
# else
#  define SWIFT_CLASS_PROPERTY(...)
# endif
#endif

#if __has_attribute(objc_runtime_name)
# define SWIFT_RUNTIME_NAME(X) __attribute__((objc_runtime_name(X)))
#else
# define SWIFT_RUNTIME_NAME(X)
#endif
#if __has_attribute(swift_name)
# define SWIFT_COMPILE_NAME(X) __attribute__((swift_name(X)))
#else
# define SWIFT_COMPILE_NAME(X)
#endif
#if __has_attribute(objc_method_family)
# define SWIFT_METHOD_FAMILY(X) __attribute__((objc_method_family(X)))
#else
# define SWIFT_METHOD_FAMILY(X)
#endif
#if __has_attribute(noescape)
# define SWIFT_NOESCAPE __attribute__((noescape))
#else
# define SWIFT_NOESCAPE
#endif
#if __has_attribute(ns_consumed)
# define SWIFT_RELEASES_ARGUMENT __attribute__((ns_consumed))
#else
# define SWIFT_RELEASES_ARGUMENT
#endif
#if __has_attribute(warn_unused_result)
# define SWIFT_WARN_UNUSED_RESULT __attribute__((warn_unused_result))
#else
# define SWIFT_WARN_UNUSED_RESULT
#endif
#if __has_attribute(noreturn)
# define SWIFT_NORETURN __attribute__((noreturn))
#else
# define SWIFT_NORETURN
#endif
#if !defined(SWIFT_CLASS_EXTRA)
# define SWIFT_CLASS_EXTRA
#endif
#if !defined(SWIFT_PROTOCOL_EXTRA)
# define SWIFT_PROTOCOL_EXTRA
#endif
#if !defined(SWIFT_ENUM_EXTRA)
# define SWIFT_ENUM_EXTRA
#endif
#if !defined(SWIFT_CLASS)
# if __has_attribute(objc_subclassing_restricted)
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# else
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# endif
#endif
#if !defined(SWIFT_RESILIENT_CLASS)
# if __has_attribute(objc_class_stub)
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME) __attribute__((objc_class_stub))
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_class_stub)) SWIFT_CLASS_NAMED(SWIFT_NAME)
# else
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME)
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) SWIFT_CLASS_NAMED(SWIFT_NAME)
# endif
#endif

#if !defined(SWIFT_PROTOCOL)
# define SWIFT_PROTOCOL(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
# define SWIFT_PROTOCOL_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
#endif

#if !defined(SWIFT_EXTENSION)
# define SWIFT_EXTENSION(M) SWIFT_PASTE(M##_Swift_, __LINE__)
#endif

#if !defined(OBJC_DESIGNATED_INITIALIZER)
# if __has_attribute(objc_designated_initializer)
#  define OBJC_DESIGNATED_INITIALIZER __attribute__((objc_designated_initializer))
# else
#  define OBJC_DESIGNATED_INITIALIZER
# endif
#endif
#if !defined(SWIFT_ENUM_ATTR)
# if defined(__has_attribute) && __has_attribute(enum_extensibility)
#  define SWIFT_ENUM_ATTR(_extensibility) __attribute__((enum_extensibility(_extensibility)))
# else
#  define SWIFT_ENUM_ATTR(_extensibility)
# endif
#endif
#if !defined(SWIFT_ENUM)
# define SWIFT_ENUM(_type, _name, _extensibility) enum _name : _type _name; enum SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# if __has_feature(generalized_swift_name)
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) enum _name : _type _name SWIFT_COMPILE_NAME(SWIFT_NAME); enum SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# else
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) SWIFT_ENUM(_type, _name, _extensibility)
# endif
#endif
#if !defined(SWIFT_UNAVAILABLE)
# define SWIFT_UNAVAILABLE __attribute__((unavailable))
#endif
#if !defined(SWIFT_UNAVAILABLE_MSG)
# define SWIFT_UNAVAILABLE_MSG(msg) __attribute__((unavailable(msg)))
#endif
#if !defined(SWIFT_AVAILABILITY)
# define SWIFT_AVAILABILITY(plat, ...) __attribute__((availability(plat, __VA_ARGS__)))
#endif
#if !defined(SWIFT_WEAK_IMPORT)
# define SWIFT_WEAK_IMPORT __attribute__((weak_import))
#endif
#if !defined(SWIFT_DEPRECATED)
# define SWIFT_DEPRECATED __attribute__((deprecated))
#endif
#if !defined(SWIFT_DEPRECATED_MSG)
# define SWIFT_DEPRECATED_MSG(...) __attribute__((deprecated(__VA_ARGS__)))
#endif
#if __has_feature(attribute_diagnose_if_objc)
# define SWIFT_DEPRECATED_OBJC(Msg) __attribute__((diagnose_if(1, Msg, "warning")))
#else
# define SWIFT_DEPRECATED_OBJC(Msg) SWIFT_DEPRECATED_MSG(Msg)
#endif
#if !defined(IBSegueAction)
# define IBSegueAction
#endif
#if __has_feature(modules)
#if __has_warning("-Watimport-in-framework-header")
#pragma clang diagnostic ignored "-Watimport-in-framework-header"
#endif
@import CoreData;
@import Foundation;
#endif

#pragma clang diagnostic ignored "-Wproperty-attribute-mismatch"
#pragma clang diagnostic ignored "-Wduplicate-method-arg"
#if __has_warning("-Wpragma-clang-attribute")
# pragma clang diagnostic ignored "-Wpragma-clang-attribute"
#endif
#pragma clang diagnostic ignored "-Wunknown-pragmas"
#pragma clang diagnostic ignored "-Wnullability"

#if __has_attribute(external_source_symbol)
# pragma push_macro("any")
# undef any
# pragma clang attribute push(__attribute__((external_source_symbol(language="Swift", defined_in="FrolloSDK",generated_declaration))), apply_to=any(function,enum,objc_interface,objc_category,objc_protocol))
# pragma pop_macro("any")
#endif

@class NSEntityDescription;
@class NSManagedObjectContext;

/// Account
/// Core Data model of the account.
SWIFT_CLASS("_TtC9FrolloSDK7Account")
@interface Account : NSManagedObject
- (nonnull instancetype)initWithEntity:(NSEntityDescription * _Nonnull)entity insertIntoManagedObjectContext:(NSManagedObjectContext * _Nullable)context OBJC_DESIGNATED_INITIALIZER;
@end

@class Card;

@interface Account (SWIFT_EXTENSION(FrolloSDK))
/// Add an cards relationship
- (void)addCardsObject:(Card * _Nonnull)value;
/// Remove an cards relationship
- (void)removeCardsObject:(Card * _Nonnull)value;
/// Add cards relationships
- (void)addCards:(NSSet<Card *> * _Nonnull)values;
/// Remove cards relationships
- (void)removeCards:(NSSet<Card *> * _Nonnull)values;
@end

@class CDRProductInformation;

@interface Account (SWIFT_EXTENSION(FrolloSDK))
/// Add an CDR product information relationship
- (void)addProductInformationsObject:(CDRProductInformation * _Nonnull)value;
/// Remove an CDR product information relationship
- (void)removeProductInformationsObject:(CDRProductInformation * _Nonnull)value;
/// Add CDR product information relationships
- (void)addProductInformations:(NSSet<CDRProductInformation *> * _Nonnull)values;
/// Remove CDR product information relationships
- (void)removeProductInformations:(NSSet<CDRProductInformation *> * _Nonnull)values;
@end

@class Transaction;

@interface Account (SWIFT_EXTENSION(FrolloSDK))
/// Add a transaction relationship
- (void)addTransactionsObject:(Transaction * _Nonnull)value;
/// Remove a transaction relationship
- (void)removeTransactionsObject:(Transaction * _Nonnull)value;
/// Add transaction relationships
- (void)addTransactions:(NSSet<Transaction *> * _Nonnull)values;
/// Remove transaction relationships
- (void)removeTransactions:(NSSet<Transaction *> * _Nonnull)values;
@end

@class ReportAccountBalance;
@class NSSet;

@interface Account (SWIFT_EXTENSION(FrolloSDK))
/// Add a account balance report relationship
- (void)addReportsObject:(ReportAccountBalance * _Nonnull)value;
/// Remove a account balance report relationship
- (void)removeReportsObject:(ReportAccountBalance * _Nonnull)value;
/// Add account balance report relationships
- (void)addReports:(NSSet * _Nonnull)values;
/// Remove account balance report relationships
- (void)removeReports:(NSSet * _Nonnull)values;
@end

@class Goal;

@interface Account (SWIFT_EXTENSION(FrolloSDK))
/// Add a goal relationship
- (void)addGoalsObject:(Goal * _Nonnull)value;
/// Remove a goal relationship
- (void)removeGoalsObject:(Goal * _Nonnull)value;
/// Add goal relationships
- (void)addGoals:(NSSet<Goal *> * _Nonnull)values;
/// Remove goal relationships
- (void)removeGoals:(NSSet<Goal *> * _Nonnull)values;
@end

@class Bill;

@interface Account (SWIFT_EXTENSION(FrolloSDK))
/// Add a bill relationship
- (void)addBillsObject:(Bill * _Nonnull)value;
/// Remove a bill relationship
- (void)removeBillsObject:(Bill * _Nonnull)value;
/// Add bill relationships
- (void)addBills:(NSSet<Bill *> * _Nonnull)values;
/// Remove bill relationships
- (void)removeBills:(NSSet<Bill *> * _Nonnull)values;
@end

@class AccountBalanceTier;

@interface Account (SWIFT_EXTENSION(FrolloSDK))
/// Add an account balance tier relationship
- (void)addBalanceTiersObject:(AccountBalanceTier * _Nonnull)value;
/// Remove an account balance tier relationship
- (void)removeBalanceTiersObject:(AccountBalanceTier * _Nonnull)value;
/// Add account balance tier relationships
- (void)addBalanceTiers:(NSSet<AccountBalanceTier *> * _Nonnull)values;
/// Remove account balance tier relationships
- (void)removeBalanceTiers:(NSSet<AccountBalanceTier *> * _Nonnull)values;
@end

@class NSDecimalNumber;
@class ProviderAccount;

@interface Account (SWIFT_EXTENSION(FrolloSDK))
/// Name of the account holder (optional)
@property (nonatomic, copy) NSString * _Nullable accountHolderName;
/// Unique ID of the account
@property (nonatomic) int64_t accountID;
/// Name of the account (optional)
@property (nonatomic, copy) NSString * _Nullable accountName;
/// Account number of the account (optional)
@property (nonatomic, copy) NSString * _Nullable accountNumber;
/// Raw value for the account status. Use only in predicates
@property (nonatomic, copy) NSString * _Nonnull accountStatusRawValue;
/// Raw value for the account sub type. Use only in predicates
@property (nonatomic, copy) NSString * _Nonnull accountSubTypeRawValue;
/// Raw value for the account type. Use only in predicates
@property (nonatomic, copy) NSString * _Nonnull accountTypeRawValue;
/// Amount due, for example monthly for a credit card (optional)
@property (nonatomic, strong) NSDecimalNumber * _Nullable amountDue;
/// Amount due currency ISO code (optional)
@property (nonatomic, copy) NSString * _Nullable amountDueCurrency;
/// APR percentage (optional)
@property (nonatomic, strong) NSDecimalNumber * _Nullable apr;
/// Available balance (optional)
@property (nonatomic, strong) NSDecimalNumber * _Nullable availableBalance;
/// Available balance currency ISO code (optional)
@property (nonatomic, copy) NSString * _Nullable availableBalanceCurrency;
/// Available cash (optional)
@property (nonatomic, strong) NSDecimalNumber * _Nullable availableCash;
/// Available cash currency (optional)
@property (nonatomic, copy) NSString * _Nullable availableCashCurrency;
/// Available credit (optional)
@property (nonatomic, strong) NSDecimalNumber * _Nullable availableCredit;
/// Available credit currency ISO code (optional)
@property (nonatomic, copy) NSString * _Nullable availableCreditCurrency;
/// Description of the current account balance tier (optional)
@property (nonatomic, copy) NSString * _Nullable balanceDescription;
/// BSB of the account (optional)
@property (nonatomic, copy) NSString * _Nullable bsb;
/// Raw value of the account classification. Use only in predicates (optional)
@property (nonatomic, copy) NSString * _Nullable classificationRawValue;
/// Current balance (optional)
@property (nonatomic, strong) NSDecimalNumber * _Nullable currentBalance;
/// Current balance currency ISO code (optional)
@property (nonatomic, copy) NSString * _Nullable currentBalanceCurrency;
/// Next due date on the account (optional)
@property (nonatomic, copy) NSDate * _Nullable dueDate;
/// External ID of the object - i.e. the internal ID used by a provider
@property (nonatomic, copy) NSString * _Nullable externalID;
/// Favourited
@property (nonatomic) BOOL favourite;
/// Raw value for the account features
@property (nonatomic, copy) NSData * _Nullable featuresRawValue;
/// Raw value for the associated goal IDs
@property (nonatomic, copy) NSData * _Nullable goalIDsRawValue;
/// Raw value for the account group. Use only in predicates
@property (nonatomic, copy) NSString * _Nonnull groupRawValue;
/// Hidden. Used to hide the account in the UI
@property (nonatomic) BOOL hidden;
/// Included in budget. Used to exclude accounts from counting towards the user’s budgets
@property (nonatomic) BOOL included;
/// Interest rate percentage (optional)
@property (nonatomic, strong) NSDecimalNumber * _Nullable interestRate;
/// Last payment amount (optional)
@property (nonatomic, strong) NSDecimalNumber * _Nullable lastPaymentAmount;
/// Last payment amount currency ISO code (optional)
@property (nonatomic, copy) NSString * _Nullable lastPaymentAmountCurrency;
/// Date the last payment was made (optional)
@property (nonatomic, copy) NSDate * _Nullable lastPaymentDate;
/// Date the aggregator last refreshed the account (optional)
@property (nonatomic, copy) NSDate * _Nullable lastRefreshed;
/// Minimum amount due (optional)
@property (nonatomic, strong) NSDecimalNumber * _Nullable minimumAmountDue;
/// Minimum amount due currency ISO code (optional)
@property (nonatomic, copy) NSString * _Nullable minimumAmountDueCurrency;
/// Next refresh date by the aggregator (optional)
@property (nonatomic, copy) NSDate * _Nullable nextRefresh;
/// Nickname given to the account for display and identification purposes (optional)
@property (nonatomic, copy) NSString * _Nullable nickName;
/// URL of product details page (optional); Nil if product not selected
@property (nonatomic, copy) NSString * _Nullable productDetailsPageURL;
/// ID of selected Product for this Account (optional, -1 is not selected)
@property (nonatomic) int64_t productID;
/// Name of selected Product for this Account (optional); Nil if product not selected
@property (nonatomic, copy) NSString * _Nullable productName;
/// ProductsAvailable. True if CDR Products are available for this Account
@property (nonatomic) BOOL productsAvailable;
/// Parent provider account ID
@property (nonatomic) int64_t providerAccountID;
/// Name of the provider convenience property (optional)
@property (nonatomic, copy) NSString * _Nullable providerName;
/// Raw value of the refresh additional status. Use only in predicate (optional)
@property (nonatomic, copy) NSString * _Nullable refreshAdditionalStatusRawValue;
/// Raw value of the refresh status. Use only in predicates
@property (nonatomic, copy) NSString * _Nonnull refreshStatusRawValue;
/// Raw value of the refresh sub status. Use only in predicate (optional)
@property (nonatomic, copy) NSString * _Nullable refreshSubStatusRawValue;
/// Total cash limit (optional)
@property (nonatomic, strong) NSDecimalNumber * _Nullable totalCashLimit;
/// Total cash limit currency ISO code (optional)
@property (nonatomic, copy) NSString * _Nullable totalCashLimitCurrency;
/// Total credit line (optional)
@property (nonatomic, strong) NSDecimalNumber * _Nullable totalCreditLine;
/// Total credit line currency (optional)
@property (nonatomic, copy) NSString * _Nullable totalCreditLineCurrency;
/// Account balance tiers (optional)
@property (nonatomic, copy) NSSet<AccountBalanceTier *> * _Nullable balanceTiers;
/// Associated bills (optional)
@property (nonatomic, copy) NSSet<Bill *> * _Nullable bills;
/// Associated goals (optional)
@property (nonatomic, copy) NSSet<Goal *> * _Nullable goals;
/// CDR Product Informations  (optional)
@property (nonatomic, copy) NSSet<CDRProductInformation *> * _Nullable productInformations;
/// Parent provider account
@property (nonatomic, strong) ProviderAccount * _Nullable providerAccount;
/// Balance reports
@property (nonatomic, copy) NSSet<ReportAccountBalance *> * _Nullable reports;
/// Child transactions
@property (nonatomic, copy) NSSet<Transaction *> * _Nullable transactions;
/// Associated cards
@property (nonatomic, copy) NSSet<Card *> * _Nullable cards;
@end


/// Account Balance Tier
/// Represents what tier a certain balance on an account falls into. Used for <code>Account.AccountType.creditScore</code>
SWIFT_CLASS("_TtC9FrolloSDK18AccountBalanceTier")
@interface AccountBalanceTier : NSManagedObject
- (nonnull instancetype)initWithEntity:(NSEntityDescription * _Nonnull)entity insertIntoManagedObjectContext:(NSManagedObjectContext * _Nullable)context OBJC_DESIGNATED_INITIALIZER;
@end


@interface AccountBalanceTier (SWIFT_EXTENSION(FrolloSDK))
/// Maximum balance value included in this tier (optional)
@property (nonatomic, strong) NSDecimalNumber * _Nullable maximum;
/// Minimum balance value included in this tier (optional)
@property (nonatomic, strong) NSDecimalNumber * _Nullable minimum;
/// Name of this tier (optional)
@property (nonatomic, copy) NSString * _Nullable name;
/// Parent account
@property (nonatomic, strong) Account * _Nullable account;
@end


/// Contact
/// Core Data represenation of a payment contact
SWIFT_CLASS("_TtC9FrolloSDK7Contact")
@interface Contact : NSManagedObject
- (nonnull instancetype)initWithEntity:(NSEntityDescription * _Nonnull)entity insertIntoManagedObjectContext:(NSManagedObjectContext * _Nullable)context OBJC_DESIGNATED_INITIALIZER;
@end


/// BPAY Contact
/// Contact of type BPAY and associated properties
SWIFT_CLASS("_TtC9FrolloSDK11BPAYContact")
@interface BPAYContact : Contact
- (nonnull instancetype)initWithEntity:(NSEntityDescription * _Nonnull)entity insertIntoManagedObjectContext:(NSManagedObjectContext * _Nullable)context OBJC_DESIGNATED_INITIALIZER;
@end


@interface BPAYContact (SWIFT_EXTENSION(FrolloSDK))
/// Biller code of the BPAY contact
@property (nonatomic, copy) NSString * _Nonnull billerCode;
/// CRN of the BPAY contact
@property (nonatomic, copy) NSString * _Nonnull crn;
/// Biller name of the BPAY contact
@property (nonatomic, copy) NSString * _Nonnull billerName;
/// The type of CRN; defaulted to fixed crn,
@property (nonatomic, copy) NSString * _Nonnull crnTypeRawValue;
@end


/// Bill
/// Core Data model of the bill.
SWIFT_CLASS("_TtC9FrolloSDK4Bill")
@interface Bill : NSManagedObject
- (nonnull instancetype)initWithEntity:(NSEntityDescription * _Nonnull)entity insertIntoManagedObjectContext:(NSManagedObjectContext * _Nullable)context OBJC_DESIGNATED_INITIALIZER;
@end

@class BillPayment;

@interface Bill (SWIFT_EXTENSION(FrolloSDK))
/// Add a payment relationship
- (void)addPaymentsObject:(BillPayment * _Nonnull)value;
/// Remove a payment relationship
- (void)removePaymentsObject:(BillPayment * _Nonnull)value;
/// Add payment relationships
- (void)addPayments:(NSSet<BillPayment *> * _Nonnull)values;
/// Remove payment relationships
- (void)removePayments:(NSSet<BillPayment *> * _Nonnull)values;
@end


@interface Bill (SWIFT_EXTENSION(FrolloSDK))
/// Add a transaction relationship
- (void)addTransactionsObject:(Transaction * _Nonnull)value;
/// Remove a transaction relationship
- (void)removeTransactionsObject:(Transaction * _Nonnull)value;
/// Add transaction relationships
- (void)addTransactions:(NSSet<Transaction *> * _Nonnull)values;
/// Remove transaction relationships
- (void)removeTransactions:(NSSet<Transaction *> * _Nonnull)values;
@end

@class Merchant;
@class TransactionCategory;

@interface Bill (SWIFT_EXTENSION(FrolloSDK))
/// Account ID bill is associated with
@property (nonatomic) int64_t accountID;
/// Average amount due
@property (nonatomic, strong) NSDecimalNumber * _Nonnull averageAmount;
/// Unique ID of the bill
@property (nonatomic) int64_t billID;
/// Raw value of the bill type. Use only in predicates
@property (nonatomic, copy) NSString * _Nonnull billTypeRawValue;
/// Additional details about the bill (Optional)
@property (nonatomic, copy) NSString * _Nullable details;
/// Current due amount
@property (nonatomic, strong) NSDecimalNumber * _Nonnull dueAmount;
/// Raw value of the end date. Use only in predicates (Optional)
@property (nonatomic, copy) NSString * _Nullable endDateString;
/// Raw value of the frequency. Use only in predicates
@property (nonatomic, copy) NSString * _Nonnull frequencyRawValue;
/// Last amount due (Optional)
@property (nonatomic, strong) NSDecimalNumber * _Nullable lastAmount;
/// Raw value of the last payment date. Use only in predicates (Optional)
@property (nonatomic, copy) NSString * _Nullable lastPaymentDateString;
/// Merchant ID bill is associated with
@property (nonatomic) int64_t merchantID;
/// Name of the bill (Optional)
@property (nonatomic, copy) NSString * _Nullable name;
/// Raw value of the next payment due date. Use only in predicates
@property (nonatomic, copy) NSString * _Nonnull nextPaymentDateString;
/// User notes about the bill (Optional)
@property (nonatomic, copy) NSString * _Nullable notes;
/// Raw value of the bill payment status. Use only in predicates
@property (nonatomic, copy) NSString * _Nonnull paymentStatusRawValue;
/// Raw value of the status. Use only in predicates
@property (nonatomic, copy) NSString * _Nonnull statusRawValue;
/// Transaction Category ID associated with the bill
@property (nonatomic) int64_t transactionCategoryID;
/// Account associated with the bill (Optional)
@property (nonatomic, strong) Account * _Nullable account;
/// Merchant associated with the bill (Optional)
@property (nonatomic, strong) Merchant * _Nullable merchant;
/// Transaction Category associated with the bill (Optional)
@property (nonatomic, strong) TransactionCategory * _Nullable transactionCategory;
/// Child bill payments
@property (nonatomic, copy) NSSet<BillPayment *> * _Nullable payments;
/// Associated transactions
@property (nonatomic, copy) NSSet<Transaction *> * _Nullable transactions;
@end


/// Bill Payment
/// Core Data model of the bill payment.
SWIFT_CLASS("_TtC9FrolloSDK11BillPayment")
@interface BillPayment : NSManagedObject
- (nonnull instancetype)initWithEntity:(NSEntityDescription * _Nonnull)entity insertIntoManagedObjectContext:(NSManagedObjectContext * _Nullable)context OBJC_DESIGNATED_INITIALIZER;
@end


@interface BillPayment (SWIFT_EXTENSION(FrolloSDK))
/// Unique ID of the bill payment
@property (nonatomic) int64_t billPaymentID;
/// Bill ID of the parent bill
@property (nonatomic) int64_t billID;
/// Name of the bill
@property (nonatomic, copy) NSString * _Nonnull name;
/// Merchant ID associated with the bill payment
@property (nonatomic) int64_t merchantID;
/// Raw value of the date. Use only in predicates
@property (nonatomic, copy) NSString * _Nonnull dateString;
/// Raw value of the payment status. Use only in predicates
@property (nonatomic, copy) NSString * _Nonnull paymentStatusRawValue;
/// Raw value of the frequency of bill payments. Use only in predicates
@property (nonatomic, copy) NSString * _Nonnull frequencyRawValue;
/// Amount of the payment (Optional)
@property (nonatomic, strong) NSDecimalNumber * _Nullable amount;
/// Parent bill (Optional)
@property (nonatomic, strong) Bill * _Nullable bill;
@end


/// Budget
/// Core Data model of the budget.
SWIFT_CLASS("_TtC9FrolloSDK6Budget")
@interface Budget : NSManagedObject
- (nonnull instancetype)initWithEntity:(NSEntityDescription * _Nonnull)entity insertIntoManagedObjectContext:(NSManagedObjectContext * _Nullable)context OBJC_DESIGNATED_INITIALIZER;
@end


@class BudgetPeriod;

@interface Budget (SWIFT_EXTENSION(FrolloSDK))
/// Add a budget period relationship
- (void)addPeriodsObject:(BudgetPeriod * _Nonnull)value;
/// Remove a budget period relationship
- (void)removePeriodsObject:(BudgetPeriod * _Nonnull)value;
/// Add budget period relationships
- (void)addPeriods:(NSSet<BudgetPeriod *> * _Nonnull)values;
/// Remove budget period relationships
- (void)removePeriods:(NSSet<BudgetPeriod *> * _Nonnull)values;
@end


@interface Budget (SWIFT_EXTENSION(FrolloSDK))
/// Unique ID of the budget
@property (nonatomic) int64_t budgetID;
/// User ID
@property (nonatomic) int64_t userID;
/// Returns true if the budget is active
@property (nonatomic) BOOL isCurrent;
/// Raw value for the type. Only use in predicates
@property (nonatomic, copy) NSString * _Nonnull typeRawValue;
/// Value of the <code>budgetType</code>. <code>name</code> if budget category and <code>id</code> if category and merchant.
@property (nonatomic, copy) NSString * _Nonnull typeValue;
/// Raw value of tracking status. Only use in predicates
@property (nonatomic, copy) NSString * _Nonnull trackingStatusRawValue;
/// Raw value of the tracking type. Use only in predicates
@property (nonatomic, copy) NSString * _Nonnull trackingTypeRawValue;
/// Raw value of status. Only use in predicates
@property (nonatomic, copy) NSString * _Nonnull statusRawValue;
/// Raw value of the frequency. Only use in predicates
@property (nonatomic, copy) NSString * _Nonnull frequencyRawValue;
/// Currency of the budget
@property (nonatomic, copy) NSString * _Nonnull currency;
/// Current amount of the Budget
@property (nonatomic, strong) NSDecimalNumber * _Nonnull currentAmount;
/// The amount you want each BudgetPeriod to be.
@property (nonatomic, strong) NSDecimalNumber * _Nonnull periodAmount;
/// Raw value for the image URL (Optional)
@property (nonatomic, copy) NSString * _Nullable imageURLString;
/// The date at which to start the Budget (Optional)
@property (nonatomic, copy) NSString * _Nullable startDateString;
/// The number of periods that belong to this Budget
@property (nonatomic) int64_t periodsCount;
/// Custom JSON metadata (optional)
@property (nonatomic, copy) NSData * _Nullable metadataRawValue;
/// Budget periods
@property (nonatomic, copy) NSSet<BudgetPeriod *> * _Nullable periods;
@end


/// Budget Period
/// Core Data model of the budget period.
SWIFT_CLASS("_TtC9FrolloSDK12BudgetPeriod")
@interface BudgetPeriod : NSManagedObject
- (nonnull instancetype)initWithEntity:(NSEntityDescription * _Nonnull)entity insertIntoManagedObjectContext:(NSManagedObjectContext * _Nullable)context OBJC_DESIGNATED_INITIALIZER;
@end



@interface BudgetPeriod (SWIFT_EXTENSION(FrolloSDK))
/// Unique ID of the budget period
@property (nonatomic) int64_t budgetPeriodID;
/// Budget ID of the parent budget
@property (nonatomic) int64_t budgetID;
/// Raw value of the start date. Use only in predicates
@property (nonatomic, copy) NSString * _Nonnull startDateString;
/// Raw value of the end date. Use only in predicates
@property (nonatomic, copy) NSString * _Nonnull endDateString;
/// Index of the period
@property (nonatomic) int64_t index;
/// Target amount to reach for the budget period
@property (nonatomic, strong) NSDecimalNumber * _Nonnull targetAmount;
/// Current amount progressed against the budget period depending on <code>trackingType</code> of the budget
@property (nonatomic, strong) NSDecimalNumber * _Nonnull currentAmount;
/// Required amount to get your targetAmount.
@property (nonatomic, strong) NSDecimalNumber * _Nonnull requiredAmount;
/// Raw value of the tracking status. Use only in predicates
@property (nonatomic, copy) NSString * _Nullable trackingStatusRawValue;
/// Budget associated with
@property (nonatomic, strong) Budget * _Nullable budget;
@end


/// CDR Product Information
/// Represents key information of CDR Product
SWIFT_CLASS("_TtC9FrolloSDK16CDRConfiguration")
@interface CDRConfiguration : NSManagedObject
- (nonnull instancetype)initWithEntity:(NSEntityDescription * _Nonnull)entity insertIntoManagedObjectContext:(NSManagedObjectContext * _Nullable)context OBJC_DESIGNATED_INITIALIZER;
@end


@interface CDRConfiguration (SWIFT_EXTENSION(FrolloSDK))
/// The email to contact for support
@property (nonatomic, copy) NSString * _Nonnull supportEmail;
/// The id of the ADR that handles CDR data
@property (nonatomic, copy) NSString * _Nonnull adrID;
/// The name of the ADR that handles CDR data
@property (nonatomic, copy) NSString * _Nonnull adrName;
/// The raw sharing durations JSON data
@property (nonatomic, copy) NSData * _Nonnull sharingDurationRawValue;
@end


/// CDR Product Information
/// Represents key information of CDR Product
SWIFT_CLASS("_TtC9FrolloSDK21CDRProductInformation")
@interface CDRProductInformation : NSManagedObject
- (nonnull instancetype)initWithEntity:(NSEntityDescription * _Nonnull)entity insertIntoManagedObjectContext:(NSManagedObjectContext * _Nullable)context OBJC_DESIGNATED_INITIALIZER;
@end


@interface CDRProductInformation (SWIFT_EXTENSION(FrolloSDK))
/// name of the product information
@property (nonatomic, copy) NSString * _Nullable name;
/// value of the product information
@property (nonatomic, copy) NSString * _Nullable value;
/// parent account
@property (nonatomic, strong) Account * _Nullable account;
@end


/// Card
/// Core Data represenation of a Card
SWIFT_CLASS("_TtC9FrolloSDK4Card")
@interface Card : NSManagedObject
- (nonnull instancetype)initWithEntity:(NSEntityDescription * _Nonnull)entity insertIntoManagedObjectContext:(NSManagedObjectContext * _Nullable)context OBJC_DESIGNATED_INITIALIZER;
@end


@interface Card (SWIFT_EXTENSION(FrolloSDK))
/// Unique identifier of the card
@property (nonatomic) int64_t cardID;
/// ID of the account to which the card is associated with
@property (nonatomic) int64_t accountID;
/// Name of the card
@property (nonatomic, copy) NSString * _Nonnull name;
/// Nick name of the card (optional)
@property (nonatomic, copy) NSString * _Nullable nickName;
/// The current status of the card; eg active, pending etc
@property (nonatomic, copy) NSString * _Nonnull statusRawValue;
/// The design type of the card
@property (nonatomic, copy) NSString * _Nonnull designTypeRawValue;
/// Date the card was created
@property (nonatomic, copy) NSString * _Nonnull createdDateString;
/// Account associated with the card (Optional)
@property (nonatomic, strong) Account * _Nullable account;
/// Date the card was cancelled (Optional)
@property (nonatomic, copy) NSString * _Nullable cancelledDateString;
/// Name of the card holder (Optional)
@property (nonatomic, copy) NSString * _Nullable cardholderName;
/// Date on which the card will expire (Optional)
@property (nonatomic, copy) NSString * _Nullable expiryDate;
/// Issuer of the card; eg Visa, Mastercard (Optional)
@property (nonatomic, copy) NSString * _Nullable issuerRawValue;
/// Last 4 digits of the card’s Primary Account Number (Optional)
@property (nonatomic, copy) NSString * _Nullable panLastDigits;
/// Type of the card; eg credit, debit (Optional)
@property (nonatomic, copy) NSString * _Nullable typeRawValue;
@end


/// Consent
/// Core Data model of the account.
SWIFT_CLASS("_TtC9FrolloSDK7Consent")
@interface Consent : NSManagedObject
- (nonnull instancetype)initWithEntity:(NSEntityDescription * _Nonnull)entity insertIntoManagedObjectContext:(NSManagedObjectContext * _Nullable)context OBJC_DESIGNATED_INITIALIZER;
@end

@class Provider;

@interface Consent (SWIFT_EXTENSION(FrolloSDK))
/// Unique ID of the consent
@property (nonatomic) int64_t consentID;
/// Raw value for the additional permissions. Use only in predicates (Optional)
@property (nonatomic, copy) NSData * _Nullable additionalPermissionsRawValue;
/// The url used to login with the provider (Optional)
@property (nonatomic, copy) NSString * _Nullable authorizationURLString;
/// The confirmation PDF generated after the consent becomes active (Optional)
@property (nonatomic, copy) NSString * _Nullable confirmationPDFURLString;
/// Raw value for the permissions. Use only in predicates (Optional)
@property (nonatomic, copy) NSData * _Nullable permissionObjectsRawValue;
/// The provider account ID related to the consent
@property (nonatomic) int64_t providerAccountID;
/// The provider ID related to the consent
@property (nonatomic) int64_t providerID;
/// The duration (in seconds) of the sharing
@property (nonatomic) int64_t sharingDurationRawValue;
/// Raw value of the consent started at date. Use only in predicates (Optional)
@property (nonatomic, copy) NSString * _Nullable sharingStartedAtRawValue;
/// Raw value of the consent stopped at date. Use only in predicates (Optional)
@property (nonatomic, copy) NSString * _Nullable sharingStoppedAtRawValue;
/// Raw value for the status. Use only in predicates
@property (nonatomic, copy) NSString * _Nonnull statusRawValue;
/// The PDF URL string that contains the withdrawal information (Optional)
@property (nonatomic, copy) NSString * _Nullable withdrawalPDFURLString;
/// The provider associated with the consent (Optional)
@property (nonatomic, strong) Provider * _Nullable provider;
/// The provider account associated with the consent (Optional)
@property (nonatomic, strong) ProviderAccount * _Nullable providerAccount;
@end



@interface Contact (SWIFT_EXTENSION(FrolloSDK))
/// Unique identifier of the contact
@property (nonatomic) int64_t contactID;
/// Name of the contact (optional)
@property (nonatomic, copy) NSString * _Nullable name;
/// Nick name of the contact
@property (nonatomic, copy) NSString * _Nonnull nickName;
/// Description of the contact (Optional)
@property (nonatomic, copy) NSString * _Nullable contactDescription;
/// The type of payment method of contact; eg Biller, PayID etc
@property (nonatomic, copy) NSString * _Nonnull contactTypeRawValue;
/// Date the contact was created
@property (nonatomic, copy) NSString * _Nonnull createdDateString;
/// Date the contact was last updated
@property (nonatomic, copy) NSString * _Nonnull modifiedDateString;
/// Raw value for the associated provider account IDs
@property (nonatomic, copy) NSData * _Nullable providerAccountIDsRawValue;
/// Is contact verified or not
@property (nonatomic) BOOL isVerified;
@end



/// Goal
/// Core Data model of the goal.
SWIFT_CLASS("_TtC9FrolloSDK4Goal")
@interface Goal : NSManagedObject
- (nonnull instancetype)initWithEntity:(NSEntityDescription * _Nonnull)entity insertIntoManagedObjectContext:(NSManagedObjectContext * _Nullable)context OBJC_DESIGNATED_INITIALIZER;
@end

@class GoalPeriod;

@interface Goal (SWIFT_EXTENSION(FrolloSDK))
/// Add a goal period relationship
- (void)addPeriodsObject:(GoalPeriod * _Nonnull)value;
/// Remove a goal period relationship
- (void)removePeriodsObject:(GoalPeriod * _Nonnull)value;
/// Add goal period relationships
- (void)addPeriods:(NSSet<GoalPeriod *> * _Nonnull)values;
/// Remove goal period relationships
- (void)removePeriods:(NSSet<GoalPeriod *> * _Nonnull)values;
@end


@interface Goal (SWIFT_EXTENSION(FrolloSDK))
/// Account ID goal is associated with if tracking automatically (Optional)
@property (nonatomic) int64_t accountID;
/// Currency ISO code of the goal
@property (nonatomic, copy) NSString * _Nonnull currency;
/// Current amount progressed against the goal. Depending on <code>trackingType</code> this will include credits and/or debits towards the goal
@property (nonatomic, strong) NSDecimalNumber * _Nonnull currentAmount;
/// Description of the goal (Optional)
@property (nonatomic, copy) NSString * _Nullable details;
/// Raw value of the end date. Use only in predicates
@property (nonatomic, copy) NSString * _Nonnull endDateString;
/// Raw value of the estimated end date. Use only in predicates (Optional)
@property (nonatomic, copy) NSString * _Nullable estimatedEndDateString;
/// Estimated amount saved at the end of the goal at the current rate of progress (Optional)
@property (nonatomic, strong) NSDecimalNumber * _Nullable estimatedTargetAmount;
/// Raw value of the frequence. Use only in predicates
@property (nonatomic, copy) NSString * _Nonnull frequencyRawValue;
/// Unique ID of the goal
@property (nonatomic) int64_t goalID;
/// Raw value for the image URL (Optional)
@property (nonatomic, copy) NSString * _Nullable imageURLString;
/// Raw value for the metadata JSON associated with the goal (Optional)
@property (nonatomic, copy) NSData * _Nullable metadataRawValue;
/// Name of the goal
@property (nonatomic, copy) NSString * _Nonnull name;
/// Amount to be saved each period
@property (nonatomic, strong) NSDecimalNumber * _Nonnull periodAmount;
/// Amount of periods until the goal is completed
@property (nonatomic) int64_t periodCount;
/// Starting amount of the goal
@property (nonatomic, strong) NSDecimalNumber * _Nonnull startAmount;
/// Raw value of the start date. Use only in predicates
@property (nonatomic, copy) NSString * _Nonnull startDateString;
/// Raw value of the status. Use only in predicates
@property (nonatomic, copy) NSString * _Nonnull statusRawValue;
/// Target amount to reach for the goal
@property (nonatomic, strong) NSDecimalNumber * _Nonnull targetAmount;
/// Raw value of the target. Use only in predicates
@property (nonatomic, copy) NSString * _Nonnull targetRawValue;
/// Raw value of the tracking status. Use only in predicates
@property (nonatomic, copy) NSString * _Nonnull trackingStatusRawValue;
/// Raw value of the tracking type. Use only in predicates
@property (nonatomic, copy) NSString * _Nonnull trackingTypeRawValue;
/// Account associated with the goal (Optional)
@property (nonatomic, strong) Account * _Nullable account;
/// Goal periods
@property (nonatomic, copy) NSSet<GoalPeriod *> * _Nullable periods;
@end


/// Goal Period
/// Core Data model of the goal period.
SWIFT_CLASS("_TtC9FrolloSDK10GoalPeriod")
@interface GoalPeriod : NSManagedObject
- (nonnull instancetype)initWithEntity:(NSEntityDescription * _Nonnull)entity insertIntoManagedObjectContext:(NSManagedObjectContext * _Nullable)context OBJC_DESIGNATED_INITIALIZER;
@end


@interface GoalPeriod (SWIFT_EXTENSION(FrolloSDK))
/// Unique ID of the goal period
@property (nonatomic) int64_t goalPeriodID;
/// Goal ID of the parent goal
@property (nonatomic) int64_t goalID;
/// Raw value of the start date. Use only in predicates
@property (nonatomic, copy) NSString * _Nonnull startDateString;
/// Raw value of the end date. Use only in predicates
@property (nonatomic, copy) NSString * _Nonnull endDateString;
/// Index of the period
@property (nonatomic) int64_t index;
/// Target amount to reach for the goal period
@property (nonatomic, strong) NSDecimalNumber * _Nonnull targetAmount;
/// Current amount progressed against the goal period. Depending on <code>trackingType</code> of the goal this will include credits and/or debits towards the goal
@property (nonatomic, strong) NSDecimalNumber * _Nonnull currentAmount;
/// Required amount for the goal period to get back or stay on track with the goal
@property (nonatomic, strong) NSDecimalNumber * _Nonnull requiredAmount;
/// Raw value of the tracking status. Use only in predicates
@property (nonatomic, copy) NSString * _Nullable trackingStatusRawValue;
/// Goal periods are associated with
@property (nonatomic, strong) Goal * _Nullable goal;
@end


/// User Model
/// Stores information about the user and their profile
SWIFT_CLASS("_TtC9FrolloSDK5Image")
@interface Image : NSManagedObject
- (nonnull instancetype)initWithEntity:(NSEntityDescription * _Nonnull)entity insertIntoManagedObjectContext:(NSManagedObjectContext * _Nullable)context OBJC_DESIGNATED_INITIALIZER;
@end


@interface Image (SWIFT_EXTENSION(FrolloSDK))
/// Unique ID of the image
@property (nonatomic) int64_t imageID;
/// The name of the image
@property (nonatomic, copy) NSString * _Nonnull name;
/// The small url of the image
@property (nonatomic, copy) NSString * _Nonnull smallURLString;
/// The large url of the image
@property (nonatomic, copy) NSString * _Nonnull largeURLString;
/// The types of the image
@property (nonatomic, copy) NSString * _Nonnull typesRawValue;
@end


/// International Contact
/// Contact of type International and associated properties
SWIFT_CLASS("_TtC9FrolloSDK20InternationalContact")
@interface InternationalContact : Contact
- (nonnull instancetype)initWithEntity:(NSEntityDescription * _Nonnull)entity insertIntoManagedObjectContext:(NSManagedObjectContext * _Nullable)context OBJC_DESIGNATED_INITIALIZER;
@end


@interface InternationalContact (SWIFT_EXTENSION(FrolloSDK))
/// Name of the International contact
@property (nonatomic, copy) NSString * _Nullable internationalContactName;
/// Country of the International contact
@property (nonatomic, copy) NSString * _Nonnull internationalContactCountry;
/// Description of the International contact
@property (nonatomic, copy) NSString * _Nullable internationalContactMessage;
/// Country of bank of the International contact
@property (nonatomic, copy) NSString * _Nonnull internationalBankCountry;
/// Account number of the International contact
@property (nonatomic, copy) NSString * _Nonnull internationalAccountNumber;
/// Bank Address of the International contact
@property (nonatomic, copy) NSString * _Nullable internationalBankAddress;
/// BIC of the International contact
@property (nonatomic, copy) NSString * _Nullable bic;
/// Fedwire number of the International contact
@property (nonatomic, copy) NSString * _Nullable fedwireNumber;
/// Sort code of the International contact
@property (nonatomic, copy) NSString * _Nullable sortCode;
/// Chip number of the International contact
@property (nonatomic, copy) NSString * _Nullable chipNumber;
/// Routing number of the International contact
@property (nonatomic, copy) NSString * _Nullable routingNumber;
/// Legal entity identifier of the International contact
@property (nonatomic, copy) NSString * _Nullable legalEntityId;
@end


/// Merchant
/// Core Data representation of a merchant object
SWIFT_CLASS("_TtC9FrolloSDK8Merchant")
@interface Merchant : NSManagedObject
- (nonnull instancetype)initWithEntity:(NSEntityDescription * _Nonnull)entity insertIntoManagedObjectContext:(NSManagedObjectContext * _Nullable)context OBJC_DESIGNATED_INITIALIZER;
@end


@interface Merchant (SWIFT_EXTENSION(FrolloSDK))
/// Add transaction current report relationships
- (void)addCurrentReports:(NSSet * _Nonnull)values;
/// Remove transaction current report relationships
- (void)removeCurrentReports:(NSSet * _Nonnull)values;
@end


@interface Merchant (SWIFT_EXTENSION(FrolloSDK))
/// Add transaction history report relationships
- (void)addHistoryReports:(NSSet * _Nonnull)values;
/// Remove transaction history report relationships
- (void)removeHistoryReports:(NSSet * _Nonnull)values;
@end


@interface Merchant (SWIFT_EXTENSION(FrolloSDK))
/// Add a transaction relationship
- (void)addTransactionsObject:(Transaction * _Nonnull)value;
/// Remove a transaction relationship
- (void)removeTransactionsObject:(Transaction * _Nonnull)value;
/// Add transaction relationships
- (void)addTransactions:(NSSet<Transaction *> * _Nonnull)values;
/// Remove transaction relationships
- (void)removeTransactions:(NSSet<Transaction *> * _Nonnull)values;
@end


@interface Merchant (SWIFT_EXTENSION(FrolloSDK))
/// Add a bill relationship
- (void)addBillsObject:(Bill * _Nonnull)value;
/// Remove a bill relationship
- (void)removeBillsObject:(Bill * _Nonnull)value;
/// Add bill relationships
- (void)addBills:(NSSet<Bill *> * _Nonnull)values;
/// Remove bill relationships
- (void)removeBills:(NSSet<Bill *> * _Nonnull)values;
@end


@interface Merchant (SWIFT_EXTENSION(FrolloSDK))
/// Unique ID for the merchant
@property (nonatomic) int64_t merchantID;
/// Raw value of the merchant type. Use only in predicates (optional)
@property (nonatomic, copy) NSString * _Nullable merchantTypeRawValue;
/// Name of the merchant
@property (nonatomic, copy) NSString * _Nonnull name;
/// Raw value of the small logo URL string (optional)
@property (nonatomic, copy) NSString * _Nullable smallLogoURLString;
/// Associated bills (optional)
@property (nonatomic, copy) NSSet<Bill *> * _Nullable bills;
/// Related transaction history reports
@property (nonatomic, strong) NSSet * _Nullable historyReports;
/// Related transaction current reports
@property (nonatomic, strong) NSSet * _Nullable currentReports;
/// Related transactions
@property (nonatomic, copy) NSSet<Transaction *> * _Nullable transactions;
@end


/// Message
/// Core Data represenation of a message
SWIFT_CLASS("_TtC9FrolloSDK7Message")
@interface Message : NSManagedObject
- (nonnull instancetype)initWithEntity:(NSEntityDescription * _Nonnull)entity insertIntoManagedObjectContext:(NSManagedObjectContext * _Nullable)context OBJC_DESIGNATED_INITIALIZER;
@end


@interface Message (SWIFT_EXTENSION(FrolloSDK))
/// Unique identifier of the message
@property (nonatomic) int64_t messageID;
/// Event name associated with the message
@property (nonatomic, copy) NSString * _Nonnull event;
/// Title of the message (optional)
@property (nonatomic, copy) NSString * _Nullable title;
/// Unique ID of the user event associated with the message
@property (nonatomic) int64_t userEventID;
/// Placement order of the message - higher is more important
@property (nonatomic) int64_t placement;
/// Persists. Indicates if the message can be marked read or not
@property (nonatomic) BOOL persists;
/// Read/unread state
@property (nonatomic) BOOL read;
/// Interacted. Should be updated if the user interacted with the message
@property (nonatomic) BOOL interacted;
/// Raw value for the content type. Use only in predicates (optional)
@property (nonatomic, copy) NSString * _Nullable contentTypeRawValue;
/// Raw value for the types the message is associated with. Use only in predicates using <code>CONTAINS '|<type>|'</code> to ensure unique matches (optional)
@property (nonatomic, copy) NSString * _Nonnull typesRawValue;
/// Title of the action (optional)
@property (nonatomic, copy) NSString * _Nullable actionTitle;
/// Raw value of the action URL. Use only in predicates (optional)
@property (nonatomic, copy) NSString * _Nullable actionURLString;
/// Raw value of open mode. Determines how  link should be opened.
@property (nonatomic, copy) NSString * _Nullable openModeRawValue;
/// Specifies whether the message will be dismissed automatically or manually. True means automatically. False means manually
@property (nonatomic) BOOL autoDismiss;
/// Raw value for the metadata JSON associated with the message (Optional)
@property (nonatomic, copy) NSData * _Nullable metaDataRawValue;
@end


/// Message HTML
/// Message with HTML content type and associated properties
SWIFT_CLASS("_TtC9FrolloSDK11MessageHTML")
@interface MessageHTML : Message
- (nonnull instancetype)initWithEntity:(NSEntityDescription * _Nonnull)entity insertIntoManagedObjectContext:(NSManagedObjectContext * _Nullable)context OBJC_DESIGNATED_INITIALIZER;
@end


@interface MessageHTML (SWIFT_EXTENSION(FrolloSDK))
/// Footer content (optional)
@property (nonatomic, copy) NSString * _Nullable footer;
/// Header content (optional)
@property (nonatomic, copy) NSString * _Nullable header;
/// HTML content to be rendered
@property (nonatomic, copy) NSString * _Nonnull main;
@end


/// Message Image
/// Message with image content type and associated properties
SWIFT_CLASS("_TtC9FrolloSDK12MessageImage")
@interface MessageImage : Message
- (nonnull instancetype)initWithEntity:(NSEntityDescription * _Nonnull)entity insertIntoManagedObjectContext:(NSManagedObjectContext * _Nullable)context OBJC_DESIGNATED_INITIALIZER;
@end


@interface MessageImage (SWIFT_EXTENSION(FrolloSDK))
/// Height of the image in pixels
@property (nonatomic) double height;
/// Width of the image in pixels
@property (nonatomic) double width;
/// Raw value for the image URL
@property (nonatomic, copy) NSString * _Nonnull urlString;
@end


/// Message Text
/// Message with text content type and associated properties
SWIFT_CLASS("_TtC9FrolloSDK11MessageText")
@interface MessageText : Message
- (nonnull instancetype)initWithEntity:(NSEntityDescription * _Nonnull)entity insertIntoManagedObjectContext:(NSManagedObjectContext * _Nullable)context OBJC_DESIGNATED_INITIALIZER;
@end


@interface MessageText (SWIFT_EXTENSION(FrolloSDK))
/// Design type indicating how the message should be rendered
@property (nonatomic, copy) NSString * _Nonnull designType;
/// Footer content (optional)
@property (nonatomic, copy) NSString * _Nullable footer;
/// Header content (optional)
@property (nonatomic, copy) NSString * _Nullable header;
/// Raw value of the image URL. Use only in predicates (optional)
@property (nonatomic, copy) NSString * _Nullable imageURLString;
/// Text body content (optional)
@property (nonatomic, copy) NSString * _Nullable text;
@end


/// Message Video
/// Message with video content type and associated properties
SWIFT_CLASS("_TtC9FrolloSDK12MessageVideo")
@interface MessageVideo : Message
- (nonnull instancetype)initWithEntity:(NSEntityDescription * _Nonnull)entity insertIntoManagedObjectContext:(NSManagedObjectContext * _Nullable)context OBJC_DESIGNATED_INITIALIZER;
@end


@interface MessageVideo (SWIFT_EXTENSION(FrolloSDK))
/// Height in pixels of the video
@property (nonatomic) double height;
/// Width in pixels of the video
@property (nonatomic) double width;
/// Default mute state of the video
@property (nonatomic) BOOL muted;
/// Video should autoplay
@property (nonatomic) BOOL autoplay;
/// Video should autoplay while the device is on cellular data
@property (nonatomic) BOOL autoplayCellular;
/// Raw value for the placeholder image to display while video is loading (optional)
@property (nonatomic, copy) NSString * _Nullable iconURLString;
/// Raw value for the video URL
@property (nonatomic, copy) NSString * _Nonnull urlString;
@end



/// PayAnyone Contact
/// Contact of type Pay Anyone and associated properties
SWIFT_CLASS("_TtC9FrolloSDK16PayAnyoneContact")
@interface PayAnyoneContact : Contact
- (nonnull instancetype)initWithEntity:(NSEntityDescription * _Nonnull)entity insertIntoManagedObjectContext:(NSManagedObjectContext * _Nullable)context OBJC_DESIGNATED_INITIALIZER;
@end


@interface PayAnyoneContact (SWIFT_EXTENSION(FrolloSDK))
/// Account name of the contact
@property (nonatomic, copy) NSString * _Nonnull accountHolder;
/// BSB of the contact
@property (nonatomic, copy) NSString * _Nonnull bsb;
/// Account number of the contact
@property (nonatomic, copy) NSString * _Nonnull accountNumber;
@end


/// Pay Day
/// Core data model of pay day
SWIFT_CLASS("_TtC9FrolloSDK6PayDay")
@interface PayDay : NSManagedObject
- (nonnull instancetype)initWithEntity:(NSEntityDescription * _Nonnull)entity insertIntoManagedObjectContext:(NSManagedObjectContext * _Nullable)context OBJC_DESIGNATED_INITIALIZER;
@end


@interface PayDay (SWIFT_EXTENSION(FrolloSDK))
/// Raw value of the last pay day date. Use only in predicates (Optional)
@property (nonatomic, copy) NSString * _Nullable lastDateString;
/// Raw value of the next pay day date. Use only in predicates (Optional)
@property (nonatomic, copy) NSString * _Nullable nextDateString;
/// Raw value of the frequence. Use only in predicates
@property (nonatomic, copy) NSString * _Nonnull periodRawValue;
/// Raw value of the status. Use only in predicates
@property (nonatomic, copy) NSString * _Nonnull statusRawValue;
@end


/// PayID Contact
/// Contact of type PayID and associated properties
SWIFT_CLASS("_TtC9FrolloSDK12PayIDContact")
@interface PayIDContact : Contact
- (nonnull instancetype)initWithEntity:(NSEntityDescription * _Nonnull)entity insertIntoManagedObjectContext:(NSManagedObjectContext * _Nullable)context OBJC_DESIGNATED_INITIALIZER;
@end


@interface PayIDContact (SWIFT_EXTENSION(FrolloSDK))
/// PayID value of the contact
@property (nonatomic, copy) NSString * _Nonnull payID;
/// Name of the PayID contact
@property (nonatomic, copy) NSString * _Nullable payIDName;
/// The type of payID; eg Phone numner, email etc
@property (nonatomic, copy) NSString * _Nonnull payIDTypeRawValue;
@end


/// Provider
/// Core Data represenation of provider of accounts
SWIFT_CLASS("_TtC9FrolloSDK8Provider")
@interface Provider : NSManagedObject
- (nonnull instancetype)initWithEntity:(NSEntityDescription * _Nonnull)entity insertIntoManagedObjectContext:(NSManagedObjectContext * _Nullable)context OBJC_DESIGNATED_INITIALIZER;
@end


@interface Provider (SWIFT_EXTENSION(FrolloSDK))
/// Add a provider account relationship
- (void)addProviderAccountsObject:(ProviderAccount * _Nonnull)value;
/// Remove a provider account relationship
- (void)removeProviderAccountsObject:(ProviderAccount * _Nonnull)value;
/// Add provider account relationships
- (void)addProviderAccounts:(NSSet<ProviderAccount *> * _Nonnull)values;
/// Remove provider account relationships
- (void)removeProviderAccounts:(NSSet<ProviderAccount *> * _Nonnull)values;
@end


@interface Provider (SWIFT_EXTENSION(FrolloSDK))
/// Add a consent relationship
- (void)addConsentsObject:(Consent * _Nonnull)value;
/// Remove a consent relationship
- (void)removeConsentsObject:(Consent * _Nonnull)value;
/// Add consent relationships
- (void)addConsents:(NSSet<Consent *> * _Nonnull)values;
/// Remove consent relationships
- (void)removeConsents:(NSSet<Consent *> * _Nonnull)values;
@end


@interface Provider (SWIFT_EXTENSION(FrolloSDK))
/// Raw value of the authentication type. Use only in predicates (optional)
@property (nonatomic, copy) NSString * _Nullable authTypeRawValue;
/// Raw value of the base URL of the provider’s website. Use only in predicates (optional)
@property (nonatomic, copy) NSString * _Nullable baseURLString;
/// Supports bank containers
@property (nonatomic) BOOL containerBank;
/// Supports bill containers
@property (nonatomic) BOOL containerBill;
/// Supports credit card containers
@property (nonatomic) BOOL containerCreditCard;
/// Supports credit score containers
@property (nonatomic) BOOL containerCreditScore;
/// Supports insurance containers
@property (nonatomic) BOOL containerInsurance;
/// Supports investment containers
@property (nonatomic) BOOL containerInvestment;
/// Supports loan containers
@property (nonatomic) BOOL containerLoan;
/// Supports real estate containers
@property (nonatomic) BOOL containerRealEstate;
/// Supports reward containers
@property (nonatomic) BOOL containerReward;
/// Supports unknown containers
@property (nonatomic) BOOL containerUnknown;
/// Encryption alias to be appended to login form values (optional)
@property (nonatomic, copy) NSString * _Nullable encryptionAlias;
/// PEM Public key to be used to encrypt login forms (optional)
@property (nonatomic, copy) NSString * _Nullable encryptionPublicKey;
/// Raw value for the encryption type supported. Use only in predicates (optional)
@property (nonatomic, copy) NSString * _Nullable encryptionTypeRawValue;
/// Raw value for the forgot password URL. Use only in predicates (optional)
@property (nonatomic, copy) NSString * _Nullable forgotPasswordURLString;
/// Help message to be displayed alongside the provider (optional)
@property (nonatomic, copy) NSString * _Nullable helpMessage;
/// Raw value for the large logo URL. Use only in predicates (optional)
@property (nonatomic, copy) NSString * _Nullable largeLogoURLString;
/// Raw value storing the login form. Do not use (optional)
@property (nonatomic, copy) NSData * _Nullable loginFormRawValue;
/// Login help message (optional)
@property (nonatomic, copy) NSString * _Nullable loginHelpMessage;
/// Raw value of the login URL. Use only in predicates (optional)
@property (nonatomic, copy) NSString * _Nullable loginURLString;
/// Raw value of the MFA type. Use only in predicates (optional)
@property (nonatomic, copy) NSString * _Nullable mfaTypeRawValue;
/// Name of the provider
@property (nonatomic, copy) NSString * _Nonnull name;
/// OAuth site
@property (nonatomic) BOOL oAuthSite;
/// Popular provider
@property (nonatomic) BOOL popular;
/// Unique ID of the provider
@property (nonatomic) int64_t providerID;
/// ProductsAvailable. True if CDR Products are available for this Provider
@property (nonatomic) BOOL productsAvailable;
/// Raw value of the small logo URL. Use only in predicates (optional)
@property (nonatomic, copy) NSString * _Nullable smallLogoURLString;
/// Raw value of the status. Use only in predicate
@property (nonatomic, copy) NSString * _Nonnull statusRawValue;
/// Raw value of the permissions array. Use only in predicate (Optional)
@property (nonatomic, copy) NSData * _Nullable permissionObjectsRawValue;
/// Raw value of the aggregator type. Use only in predicate
@property (nonatomic, copy) NSString * _Nonnull aggregatorTypeRawValue;
/// Child provider accounts
@property (nonatomic, copy) NSSet<ProviderAccount *> * _Nullable providerAccounts;
/// Child associated consents
@property (nonatomic, copy) NSSet<Consent *> * _Nullable consents;
@end


/// Provider Account
/// Core Data representation of an account login for a <code>Provider</code>
SWIFT_CLASS("_TtC9FrolloSDK15ProviderAccount")
@interface ProviderAccount : NSManagedObject
- (nonnull instancetype)initWithEntity:(NSEntityDescription * _Nonnull)entity insertIntoManagedObjectContext:(NSManagedObjectContext * _Nullable)context OBJC_DESIGNATED_INITIALIZER;
@end


@interface ProviderAccount (SWIFT_EXTENSION(FrolloSDK))
/// Add an account relationship
- (void)addAccountsObject:(Account * _Nonnull)value;
/// Remove an account relationship
- (void)removeAccountsObject:(Account * _Nonnull)value;
/// Add account relationships
- (void)addAccounts:(NSSet<Account *> * _Nonnull)values;
/// Remove account relationships
- (void)removeAccounts:(NSSet<Account *> * _Nonnull)values;
@end


@interface ProviderAccount (SWIFT_EXTENSION(FrolloSDK))
/// Add a consent relationship
- (void)addConsentsObject:(Consent * _Nonnull)value;
/// Remove a consent relationship
- (void)removeConsentsObject:(Consent * _Nonnull)value;
/// Add consent relationships
- (void)addConsents:(NSSet<Consent *> * _Nonnull)values;
/// Remove consent relationships
- (void)removeConsents:(NSSet<Consent *> * _Nonnull)values;
@end


@interface ProviderAccount (SWIFT_EXTENSION(FrolloSDK))
/// Editable by the user
@property (nonatomic) BOOL editable;
/// External ID of the object - i.e. the internal ID used by a provider
@property (nonatomic, copy) NSString * _Nullable externalID;
/// Date the aggregator last refreshed the provider account
@property (nonatomic, copy) NSDate * _Nullable lastRefreshed;
/// Raw value of login form. Do not use.
@property (nonatomic, copy) NSData * _Nullable loginFormRawValue;
/// Next refresh date by the aggregator
@property (nonatomic, copy) NSDate * _Nullable nextRefresh;
/// Unique ID for the provider account
@property (nonatomic) int64_t providerAccountID;
/// Parent provider ID
@property (nonatomic) int64_t providerID;
/// Raw value of the refresh additional status. Use only in predicates (optional)
@property (nonatomic, copy) NSString * _Nullable refreshAdditionalStatusRawValue;
/// Raw value of the refresh status. Use only in predicates
@property (nonatomic, copy) NSString * _Nonnull refreshStatusRawValue;
/// Raw value of the refresh sub status. Use only in predicates (optional)
@property (nonatomic, copy) NSString * _Nullable refreshSubStatusRawValue;
/// Child accounts
@property (nonatomic, copy) NSSet<Account *> * _Nullable accounts;
/// Parent provider
@property (nonatomic, strong) Provider * _Nullable provider;
/// Child associated consents
@property (nonatomic, copy) NSSet<Consent *> * _Nullable consents;
@end


/// Account Balance Report
/// Core Data model of an account balance report
SWIFT_CLASS("_TtC9FrolloSDK20ReportAccountBalance")
@interface ReportAccountBalance : NSManagedObject
- (nonnull instancetype)initWithEntity:(NSEntityDescription * _Nonnull)entity insertIntoManagedObjectContext:(NSManagedObjectContext * _Nullable)context OBJC_DESIGNATED_INITIALIZER;
@end


@interface ReportAccountBalance (SWIFT_EXTENSION(FrolloSDK))
/// Related account ID. -1 if none linked
@property (nonatomic) int64_t accountID;
/// Currency of the report. ISO 4217 code
@property (nonatomic, copy) NSString * _Nonnull currency;
/// Raw value of the date. Use only in predicates
@property (nonatomic, copy) NSString * _Nonnull dateString;
/// Raw value of the period. Use only in predicates
@property (nonatomic, copy) NSString * _Nonnull periodRawValue;
/// Balance of the report
@property (nonatomic, strong) NSDecimalNumber * _Nullable value;
/// Related account (Optional)
@property (nonatomic, strong) Account * _Nullable account;
@end


/// Tag
/// Core Data representation of a user tag for transactions
SWIFT_CLASS("_TtC9FrolloSDK3Tag")
@interface Tag : NSManagedObject
- (nonnull instancetype)initWithEntity:(NSEntityDescription * _Nonnull)entity insertIntoManagedObjectContext:(NSManagedObjectContext * _Nullable)context OBJC_DESIGNATED_INITIALIZER;
@end


@interface Tag (SWIFT_EXTENSION(FrolloSDK))
/// The displayed name of the tag. This field is unique
@property (nonatomic, copy) NSString * _Nonnull name;
/// The number of times this tag was used
@property (nonatomic) int64_t count;
/// The date this tag was last used
@property (nonatomic, copy) NSDate * _Nullable lastUsedAt;
/// The date this tag was created
@property (nonatomic, copy) NSDate * _Nullable createdAt;
@end


/// Transaction
/// Core Data representation of a transaction from an account
SWIFT_CLASS("_TtC9FrolloSDK11Transaction")
@interface Transaction : NSManagedObject
- (nonnull instancetype)initWithEntity:(NSEntityDescription * _Nonnull)entity insertIntoManagedObjectContext:(NSManagedObjectContext * _Nullable)context OBJC_DESIGNATED_INITIALIZER;
@end


@interface Transaction (SWIFT_EXTENSION(FrolloSDK))
/// Parent account ID
@property (nonatomic) int64_t accountID;
/// Address of the merchant line 1
@property (nonatomic, copy) NSString * _Nullable addressLine1;
/// Address of the merchant line 2
@property (nonatomic, copy) NSString * _Nullable addressLine2;
/// Address of the merchant line 3
@property (nonatomic, copy) NSString * _Nullable addressLine3;
/// Amount the transaction is for
@property (nonatomic, strong) NSDecimalNumber * _Nonnull amount;
/// Raw value of the transaction base type. Only use in predicates
@property (nonatomic, copy) NSString * _Nullable baseTypeRawValue;
/// Associated bill ID
@property (nonatomic) int64_t billID;
/// Associated goal ID
@property (nonatomic) int64_t goalID;
/// Associated bill payment ID
@property (nonatomic) int64_t billPaymentID;
/// Raw value of the budget category. Only use in predicates
@property (nonatomic, copy) NSString * _Nullable budgetCategoryRawValue;
/// Country of the merchant
@property (nonatomic, copy) NSString * _Nullable country;
/// Currency ISO code of the transaction
@property (nonatomic, copy) NSString * _Nonnull currency;
/// External ID of the object - i.e. the internal ID used by a provider
@property (nonatomic, copy) NSString * _Nullable externalID;
/// Address of the merchant formatted for display
@property (nonatomic, copy) NSString * _Nullable formattedAddress;
/// Included in budget
@property (nonatomic) BOOL included;
/// Latitude of the merchant location
@property (nonatomic) double latitude;
/// Longitude of the merchant location
@property (nonatomic) double longitude;
/// Memo or notes added to the transaction (optional)
@property (nonatomic, copy) NSString * _Nullable memo;
/// Merchant ID related to the transaction
@property (nonatomic) int64_t merchantID;
/// Original description of the transaction
@property (nonatomic, copy) NSString * _Nonnull originalDescription;
/// Phone number of the merchant
@property (nonatomic, copy) NSString * _Nullable phone;
/// Postcode of the merchant
@property (nonatomic, copy) NSString * _Nullable postcode;
/// Raw value of the post date. Use only in predicates (optional)
@property (nonatomic, copy) NSString * _Nullable postDateString;
/// Simplified description of the transaction (optional)
@property (nonatomic, copy) NSString * _Nullable simpleDescription;
/// State of the merchant
@property (nonatomic, copy) NSString * _Nullable state;
/// Raw value of the transaction status. Use only in predicates
@property (nonatomic, copy) NSString * _Nonnull statusRawValue;
/// Suburb of the merchant
@property (nonatomic, copy) NSString * _Nullable suburb;
/// Transaction Category ID related to the transaction
@property (nonatomic) int64_t transactionCategoryID;
/// Raw value of the transaction date. Use only in predicates
@property (nonatomic, copy) NSString * _Nonnull transactionDateString;
/// Unique ID of the transaction
@property (nonatomic) int64_t transactionID;
/// User determined description of the transaction (optional)
@property (nonatomic, copy) NSString * _Nullable userDescription;
/// Parent account
@property (nonatomic, strong) Account * _Nullable account;
/// Related merchant
@property (nonatomic, strong) Merchant * _Nullable merchant;
/// Related transaction category
@property (nonatomic, strong) TransactionCategory * _Nullable transactionCategory;
/// Website of the merchant
@property (nonatomic, copy) NSString * _Nullable website;
/// Related transaction tags
@property (nonatomic, copy) NSString * _Nullable userTagsRawValue;
/// Amount in string to support search by amount
@property (nonatomic, copy) NSString * _Nullable searchAmount;
/// Associated bill (Optional)
@property (nonatomic, strong) Bill * _Nullable bill;
@end


/// Transaction Category
/// Core Data representation of a transaction category giving details on what type a transaction is
SWIFT_CLASS("_TtC9FrolloSDK19TransactionCategory")
@interface TransactionCategory : NSManagedObject
- (nonnull instancetype)initWithEntity:(NSEntityDescription * _Nonnull)entity insertIntoManagedObjectContext:(NSManagedObjectContext * _Nullable)context OBJC_DESIGNATED_INITIALIZER;
@end


@interface TransactionCategory (SWIFT_EXTENSION(FrolloSDK))
/// Add transaction history report relationships
- (void)addHistoryReports:(NSSet * _Nonnull)values;
/// Remove transaction history report relationships
- (void)removeHistoryReports:(NSSet * _Nonnull)values;
@end


@interface TransactionCategory (SWIFT_EXTENSION(FrolloSDK))
/// Add transaction current report relationships
- (void)addCurrentReports:(NSSet * _Nonnull)values;
/// Remove transaction current report relationships
- (void)removeCurrentReports:(NSSet * _Nonnull)values;
@end


@interface TransactionCategory (SWIFT_EXTENSION(FrolloSDK))
/// Add a bill relationship
- (void)addBillsObject:(Bill * _Nonnull)value;
/// Remove a bill relationship
- (void)removeBillsObject:(Bill * _Nonnull)value;
/// Add bill relationships
- (void)addBills:(NSSet<Bill *> * _Nonnull)values;
/// Remove bill relationships
- (void)removeBills:(NSSet<Bill *> * _Nonnull)values;
@end


@interface TransactionCategory (SWIFT_EXTENSION(FrolloSDK))
/// Add a transaction relationship
- (void)addTransactionsObject:(Transaction * _Nonnull)value;
/// Remove a transaction relationship
- (void)removeTransactionsObject:(Transaction * _Nonnull)value;
/// Add transaction relationships
- (void)addTransactions:(NSSet<Transaction *> * _Nonnull)values;
/// Remove transaction relationships
- (void)removeTransactions:(NSSet<Transaction *> * _Nonnull)values;
@end


@interface TransactionCategory (SWIFT_EXTENSION(FrolloSDK))
/// Raw value of the transaction category type. Use only in predicates
@property (nonatomic, copy) NSString * _Nonnull categoryTypeRawValue;
/// Raw value of the default budget category. Use only in predicates
@property (nonatomic, copy) NSString * _Nonnull defaultBudgetCategoryRawValue;
/// Raw value of the icon URL. Use only in predicates
@property (nonatomic, copy) NSString * _Nullable iconURLString;
/// Name of the transaction category
@property (nonatomic, copy) NSString * _Nonnull name;
/// Placement order of the transaction for determining most popular categories. Higher is more popular
@property (nonatomic) int64_t placement;
/// Unique ID for the transaction category
@property (nonatomic) int64_t transactionCategoryID;
/// User defined category
@property (nonatomic) BOOL userDefined;
/// Associated bills (optional)
@property (nonatomic, copy) NSSet<Bill *> * _Nullable bills;
/// Related transaction history reports
@property (nonatomic, strong) NSSet * _Nullable historyReports;
/// Related transaction current reports
@property (nonatomic, strong) NSSet * _Nullable currentReports;
/// Related transactions
@property (nonatomic, copy) NSSet<Transaction *> * _Nullable transactions;
@end


/// User Model
/// Stores information about the user and their profile
SWIFT_CLASS("_TtC9FrolloSDK4User")
@interface User : NSManagedObject
- (nonnull instancetype)initWithEntity:(NSEntityDescription * _Nonnull)entity insertIntoManagedObjectContext:(NSManagedObjectContext * _Nullable)context OBJC_DESIGNATED_INITIALIZER;
@end


@interface User (SWIFT_EXTENSION(FrolloSDK))
/// Attribution ad group of the user (optional)
@property (nonatomic, copy) NSString * _Nullable attributionAdGroup;
/// Attribution campaign of the user (optional)
@property (nonatomic, copy) NSString * _Nullable attributionCampaign;
/// Attribution creative of the user (optional)
@property (nonatomic, copy) NSString * _Nullable attributionCreative;
/// Attribution network of the user (optional)
@property (nonatomic, copy) NSString * _Nullable attributionNetwork;
/// Raw value for current address. Do not use
@property (nonatomic, copy) NSData * _Nullable addressRawValue;
/// Date of birth of the user (optional)
@property (nonatomic, copy) NSDate * _Nullable dateOfBirth;
/// Email address of the user
@property (nonatomic, copy) NSString * _Nonnull email;
/// User verified their email address
@property (nonatomic) BOOL emailVerified;
/// Facebook ID associated with the user (optional)
@property (nonatomic, copy) NSString * _Nullable facebookID;
/// Raw value for features. Do not use
@property (nonatomic, copy) NSData * _Nullable featuresRawValue;
/// First name of the user
@property (nonatomic, copy) NSString * _Nullable firstName;
/// Foreign tax user
@property (nonatomic) BOOL foreignTax;
/// Raw value of the user gender. Only use in predicates (optional)
@property (nonatomic, copy) NSString * _Nullable genderRawValue;
/// Number of people in the household (optional, -1 is unknown)
@property (nonatomic) int64_t householdSize;
/// Raw value of household type. Only use in predicates (optional)
@property (nonatomic, copy) NSString * _Nullable householdTypeRawValue;
/// Raw value of industry. Only use in predicates (optional)
@property (nonatomic, copy) NSString * _Nullable industryRawValue;
/// Last name of the user (optional)
@property (nonatomic, copy) NSString * _Nullable lastName;
/// Raw value for mailing address. Do not use
@property (nonatomic, copy) NSData * _Nullable mailingAddressRawValue;
/// Mobile phone number of the user (optional)
@property (nonatomic, copy) NSString * _Nullable mobileNumber;
/// Raw value of occupation. Use only in predicates (optional)
@property (nonatomic, copy) NSString * _Nullable occupationRawValue;
/// Primary currency ISO code associated with the user
@property (nonatomic, copy) NSString * _Nonnull primaryCurrency;
/// Raw value for register steps. Do not use
@property (nonatomic, copy) NSData * _Nullable registerStepsRawValue;
/// Raw value of the user status. Use only in predicates
@property (nonatomic, copy) NSString * _Nonnull statusRawValue;
/// Tax residency (optional)
@property (nonatomic, copy) NSString * _Nullable taxResidency;
/// Tax file number (optional)
@property (nonatomic, copy) NSString * _Nullable tfn;
/// Tax identification number (optional)
@property (nonatomic, copy) NSString * _Nullable tin;
/// Unique ID of the user
@property (nonatomic) int64_t userID;
/// User has a valid password
@property (nonatomic) BOOL validPassword;
@end

#if __has_attribute(external_source_symbol)
# pragma clang attribute pop
#endif
#pragma clang diagnostic pop
#endif

#elif defined(__ARM_ARCH_7A__) && __ARM_ARCH_7A__
// Generated by Apple Swift version 5.3.2 (swiftlang-1200.0.45 clang-1200.0.32.28)
#ifndef FROLLOSDK_SWIFT_H
#define FROLLOSDK_SWIFT_H
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wgcc-compat"

#if !defined(__has_include)
# define __has_include(x) 0
#endif
#if !defined(__has_attribute)
# define __has_attribute(x) 0
#endif
#if !defined(__has_feature)
# define __has_feature(x) 0
#endif
#if !defined(__has_warning)
# define __has_warning(x) 0
#endif

#if __has_include(<swift/objc-prologue.h>)
# include <swift/objc-prologue.h>
#endif

#pragma clang diagnostic ignored "-Wauto-import"
#include <Foundation/Foundation.h>
#include <stdint.h>
#include <stddef.h>
#include <stdbool.h>

#if !defined(SWIFT_TYPEDEFS)
# define SWIFT_TYPEDEFS 1
# if __has_include(<uchar.h>)
#  include <uchar.h>
# elif !defined(__cplusplus)
typedef uint_least16_t char16_t;
typedef uint_least32_t char32_t;
# endif
typedef float swift_float2  __attribute__((__ext_vector_type__(2)));
typedef float swift_float3  __attribute__((__ext_vector_type__(3)));
typedef float swift_float4  __attribute__((__ext_vector_type__(4)));
typedef double swift_double2  __attribute__((__ext_vector_type__(2)));
typedef double swift_double3  __attribute__((__ext_vector_type__(3)));
typedef double swift_double4  __attribute__((__ext_vector_type__(4)));
typedef int swift_int2  __attribute__((__ext_vector_type__(2)));
typedef int swift_int3  __attribute__((__ext_vector_type__(3)));
typedef int swift_int4  __attribute__((__ext_vector_type__(4)));
typedef unsigned int swift_uint2  __attribute__((__ext_vector_type__(2)));
typedef unsigned int swift_uint3  __attribute__((__ext_vector_type__(3)));
typedef unsigned int swift_uint4  __attribute__((__ext_vector_type__(4)));
#endif

#if !defined(SWIFT_PASTE)
# define SWIFT_PASTE_HELPER(x, y) x##y
# define SWIFT_PASTE(x, y) SWIFT_PASTE_HELPER(x, y)
#endif
#if !defined(SWIFT_METATYPE)
# define SWIFT_METATYPE(X) Class
#endif
#if !defined(SWIFT_CLASS_PROPERTY)
# if __has_feature(objc_class_property)
#  define SWIFT_CLASS_PROPERTY(...) __VA_ARGS__
# else
#  define SWIFT_CLASS_PROPERTY(...)
# endif
#endif

#if __has_attribute(objc_runtime_name)
# define SWIFT_RUNTIME_NAME(X) __attribute__((objc_runtime_name(X)))
#else
# define SWIFT_RUNTIME_NAME(X)
#endif
#if __has_attribute(swift_name)
# define SWIFT_COMPILE_NAME(X) __attribute__((swift_name(X)))
#else
# define SWIFT_COMPILE_NAME(X)
#endif
#if __has_attribute(objc_method_family)
# define SWIFT_METHOD_FAMILY(X) __attribute__((objc_method_family(X)))
#else
# define SWIFT_METHOD_FAMILY(X)
#endif
#if __has_attribute(noescape)
# define SWIFT_NOESCAPE __attribute__((noescape))
#else
# define SWIFT_NOESCAPE
#endif
#if __has_attribute(ns_consumed)
# define SWIFT_RELEASES_ARGUMENT __attribute__((ns_consumed))
#else
# define SWIFT_RELEASES_ARGUMENT
#endif
#if __has_attribute(warn_unused_result)
# define SWIFT_WARN_UNUSED_RESULT __attribute__((warn_unused_result))
#else
# define SWIFT_WARN_UNUSED_RESULT
#endif
#if __has_attribute(noreturn)
# define SWIFT_NORETURN __attribute__((noreturn))
#else
# define SWIFT_NORETURN
#endif
#if !defined(SWIFT_CLASS_EXTRA)
# define SWIFT_CLASS_EXTRA
#endif
#if !defined(SWIFT_PROTOCOL_EXTRA)
# define SWIFT_PROTOCOL_EXTRA
#endif
#if !defined(SWIFT_ENUM_EXTRA)
# define SWIFT_ENUM_EXTRA
#endif
#if !defined(SWIFT_CLASS)
# if __has_attribute(objc_subclassing_restricted)
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# else
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# endif
#endif
#if !defined(SWIFT_RESILIENT_CLASS)
# if __has_attribute(objc_class_stub)
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME) __attribute__((objc_class_stub))
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_class_stub)) SWIFT_CLASS_NAMED(SWIFT_NAME)
# else
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME)
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) SWIFT_CLASS_NAMED(SWIFT_NAME)
# endif
#endif

#if !defined(SWIFT_PROTOCOL)
# define SWIFT_PROTOCOL(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
# define SWIFT_PROTOCOL_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
#endif

#if !defined(SWIFT_EXTENSION)
# define SWIFT_EXTENSION(M) SWIFT_PASTE(M##_Swift_, __LINE__)
#endif

#if !defined(OBJC_DESIGNATED_INITIALIZER)
# if __has_attribute(objc_designated_initializer)
#  define OBJC_DESIGNATED_INITIALIZER __attribute__((objc_designated_initializer))
# else
#  define OBJC_DESIGNATED_INITIALIZER
# endif
#endif
#if !defined(SWIFT_ENUM_ATTR)
# if defined(__has_attribute) && __has_attribute(enum_extensibility)
#  define SWIFT_ENUM_ATTR(_extensibility) __attribute__((enum_extensibility(_extensibility)))
# else
#  define SWIFT_ENUM_ATTR(_extensibility)
# endif
#endif
#if !defined(SWIFT_ENUM)
# define SWIFT_ENUM(_type, _name, _extensibility) enum _name : _type _name; enum SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# if __has_feature(generalized_swift_name)
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) enum _name : _type _name SWIFT_COMPILE_NAME(SWIFT_NAME); enum SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# else
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) SWIFT_ENUM(_type, _name, _extensibility)
# endif
#endif
#if !defined(SWIFT_UNAVAILABLE)
# define SWIFT_UNAVAILABLE __attribute__((unavailable))
#endif
#if !defined(SWIFT_UNAVAILABLE_MSG)
# define SWIFT_UNAVAILABLE_MSG(msg) __attribute__((unavailable(msg)))
#endif
#if !defined(SWIFT_AVAILABILITY)
# define SWIFT_AVAILABILITY(plat, ...) __attribute__((availability(plat, __VA_ARGS__)))
#endif
#if !defined(SWIFT_WEAK_IMPORT)
# define SWIFT_WEAK_IMPORT __attribute__((weak_import))
#endif
#if !defined(SWIFT_DEPRECATED)
# define SWIFT_DEPRECATED __attribute__((deprecated))
#endif
#if !defined(SWIFT_DEPRECATED_MSG)
# define SWIFT_DEPRECATED_MSG(...) __attribute__((deprecated(__VA_ARGS__)))
#endif
#if __has_feature(attribute_diagnose_if_objc)
# define SWIFT_DEPRECATED_OBJC(Msg) __attribute__((diagnose_if(1, Msg, "warning")))
#else
# define SWIFT_DEPRECATED_OBJC(Msg) SWIFT_DEPRECATED_MSG(Msg)
#endif
#if !defined(IBSegueAction)
# define IBSegueAction
#endif
#if __has_feature(modules)
#if __has_warning("-Watimport-in-framework-header")
#pragma clang diagnostic ignored "-Watimport-in-framework-header"
#endif
@import CoreData;
@import Foundation;
#endif

#pragma clang diagnostic ignored "-Wproperty-attribute-mismatch"
#pragma clang diagnostic ignored "-Wduplicate-method-arg"
#if __has_warning("-Wpragma-clang-attribute")
# pragma clang diagnostic ignored "-Wpragma-clang-attribute"
#endif
#pragma clang diagnostic ignored "-Wunknown-pragmas"
#pragma clang diagnostic ignored "-Wnullability"

#if __has_attribute(external_source_symbol)
# pragma push_macro("any")
# undef any
# pragma clang attribute push(__attribute__((external_source_symbol(language="Swift", defined_in="FrolloSDK",generated_declaration))), apply_to=any(function,enum,objc_interface,objc_category,objc_protocol))
# pragma pop_macro("any")
#endif

@class NSEntityDescription;
@class NSManagedObjectContext;

/// Account
/// Core Data model of the account.
SWIFT_CLASS("_TtC9FrolloSDK7Account")
@interface Account : NSManagedObject
- (nonnull instancetype)initWithEntity:(NSEntityDescription * _Nonnull)entity insertIntoManagedObjectContext:(NSManagedObjectContext * _Nullable)context OBJC_DESIGNATED_INITIALIZER;
@end

@class Card;

@interface Account (SWIFT_EXTENSION(FrolloSDK))
/// Add an cards relationship
- (void)addCardsObject:(Card * _Nonnull)value;
/// Remove an cards relationship
- (void)removeCardsObject:(Card * _Nonnull)value;
/// Add cards relationships
- (void)addCards:(NSSet<Card *> * _Nonnull)values;
/// Remove cards relationships
- (void)removeCards:(NSSet<Card *> * _Nonnull)values;
@end

@class CDRProductInformation;

@interface Account (SWIFT_EXTENSION(FrolloSDK))
/// Add an CDR product information relationship
- (void)addProductInformationsObject:(CDRProductInformation * _Nonnull)value;
/// Remove an CDR product information relationship
- (void)removeProductInformationsObject:(CDRProductInformation * _Nonnull)value;
/// Add CDR product information relationships
- (void)addProductInformations:(NSSet<CDRProductInformation *> * _Nonnull)values;
/// Remove CDR product information relationships
- (void)removeProductInformations:(NSSet<CDRProductInformation *> * _Nonnull)values;
@end

@class Transaction;

@interface Account (SWIFT_EXTENSION(FrolloSDK))
/// Add a transaction relationship
- (void)addTransactionsObject:(Transaction * _Nonnull)value;
/// Remove a transaction relationship
- (void)removeTransactionsObject:(Transaction * _Nonnull)value;
/// Add transaction relationships
- (void)addTransactions:(NSSet<Transaction *> * _Nonnull)values;
/// Remove transaction relationships
- (void)removeTransactions:(NSSet<Transaction *> * _Nonnull)values;
@end

@class ReportAccountBalance;
@class NSSet;

@interface Account (SWIFT_EXTENSION(FrolloSDK))
/// Add a account balance report relationship
- (void)addReportsObject:(ReportAccountBalance * _Nonnull)value;
/// Remove a account balance report relationship
- (void)removeReportsObject:(ReportAccountBalance * _Nonnull)value;
/// Add account balance report relationships
- (void)addReports:(NSSet * _Nonnull)values;
/// Remove account balance report relationships
- (void)removeReports:(NSSet * _Nonnull)values;
@end

@class Goal;

@interface Account (SWIFT_EXTENSION(FrolloSDK))
/// Add a goal relationship
- (void)addGoalsObject:(Goal * _Nonnull)value;
/// Remove a goal relationship
- (void)removeGoalsObject:(Goal * _Nonnull)value;
/// Add goal relationships
- (void)addGoals:(NSSet<Goal *> * _Nonnull)values;
/// Remove goal relationships
- (void)removeGoals:(NSSet<Goal *> * _Nonnull)values;
@end

@class Bill;

@interface Account (SWIFT_EXTENSION(FrolloSDK))
/// Add a bill relationship
- (void)addBillsObject:(Bill * _Nonnull)value;
/// Remove a bill relationship
- (void)removeBillsObject:(Bill * _Nonnull)value;
/// Add bill relationships
- (void)addBills:(NSSet<Bill *> * _Nonnull)values;
/// Remove bill relationships
- (void)removeBills:(NSSet<Bill *> * _Nonnull)values;
@end

@class AccountBalanceTier;

@interface Account (SWIFT_EXTENSION(FrolloSDK))
/// Add an account balance tier relationship
- (void)addBalanceTiersObject:(AccountBalanceTier * _Nonnull)value;
/// Remove an account balance tier relationship
- (void)removeBalanceTiersObject:(AccountBalanceTier * _Nonnull)value;
/// Add account balance tier relationships
- (void)addBalanceTiers:(NSSet<AccountBalanceTier *> * _Nonnull)values;
/// Remove account balance tier relationships
- (void)removeBalanceTiers:(NSSet<AccountBalanceTier *> * _Nonnull)values;
@end

@class NSDecimalNumber;
@class ProviderAccount;

@interface Account (SWIFT_EXTENSION(FrolloSDK))
/// Name of the account holder (optional)
@property (nonatomic, copy) NSString * _Nullable accountHolderName;
/// Unique ID of the account
@property (nonatomic) int64_t accountID;
/// Name of the account (optional)
@property (nonatomic, copy) NSString * _Nullable accountName;
/// Account number of the account (optional)
@property (nonatomic, copy) NSString * _Nullable accountNumber;
/// Raw value for the account status. Use only in predicates
@property (nonatomic, copy) NSString * _Nonnull accountStatusRawValue;
/// Raw value for the account sub type. Use only in predicates
@property (nonatomic, copy) NSString * _Nonnull accountSubTypeRawValue;
/// Raw value for the account type. Use only in predicates
@property (nonatomic, copy) NSString * _Nonnull accountTypeRawValue;
/// Amount due, for example monthly for a credit card (optional)
@property (nonatomic, strong) NSDecimalNumber * _Nullable amountDue;
/// Amount due currency ISO code (optional)
@property (nonatomic, copy) NSString * _Nullable amountDueCurrency;
/// APR percentage (optional)
@property (nonatomic, strong) NSDecimalNumber * _Nullable apr;
/// Available balance (optional)
@property (nonatomic, strong) NSDecimalNumber * _Nullable availableBalance;
/// Available balance currency ISO code (optional)
@property (nonatomic, copy) NSString * _Nullable availableBalanceCurrency;
/// Available cash (optional)
@property (nonatomic, strong) NSDecimalNumber * _Nullable availableCash;
/// Available cash currency (optional)
@property (nonatomic, copy) NSString * _Nullable availableCashCurrency;
/// Available credit (optional)
@property (nonatomic, strong) NSDecimalNumber * _Nullable availableCredit;
/// Available credit currency ISO code (optional)
@property (nonatomic, copy) NSString * _Nullable availableCreditCurrency;
/// Description of the current account balance tier (optional)
@property (nonatomic, copy) NSString * _Nullable balanceDescription;
/// BSB of the account (optional)
@property (nonatomic, copy) NSString * _Nullable bsb;
/// Raw value of the account classification. Use only in predicates (optional)
@property (nonatomic, copy) NSString * _Nullable classificationRawValue;
/// Current balance (optional)
@property (nonatomic, strong) NSDecimalNumber * _Nullable currentBalance;
/// Current balance currency ISO code (optional)
@property (nonatomic, copy) NSString * _Nullable currentBalanceCurrency;
/// Next due date on the account (optional)
@property (nonatomic, copy) NSDate * _Nullable dueDate;
/// External ID of the object - i.e. the internal ID used by a provider
@property (nonatomic, copy) NSString * _Nullable externalID;
/// Favourited
@property (nonatomic) BOOL favourite;
/// Raw value for the account features
@property (nonatomic, copy) NSData * _Nullable featuresRawValue;
/// Raw value for the associated goal IDs
@property (nonatomic, copy) NSData * _Nullable goalIDsRawValue;
/// Raw value for the account group. Use only in predicates
@property (nonatomic, copy) NSString * _Nonnull groupRawValue;
/// Hidden. Used to hide the account in the UI
@property (nonatomic) BOOL hidden;
/// Included in budget. Used to exclude accounts from counting towards the user’s budgets
@property (nonatomic) BOOL included;
/// Interest rate percentage (optional)
@property (nonatomic, strong) NSDecimalNumber * _Nullable interestRate;
/// Last payment amount (optional)
@property (nonatomic, strong) NSDecimalNumber * _Nullable lastPaymentAmount;
/// Last payment amount currency ISO code (optional)
@property (nonatomic, copy) NSString * _Nullable lastPaymentAmountCurrency;
/// Date the last payment was made (optional)
@property (nonatomic, copy) NSDate * _Nullable lastPaymentDate;
/// Date the aggregator last refreshed the account (optional)
@property (nonatomic, copy) NSDate * _Nullable lastRefreshed;
/// Minimum amount due (optional)
@property (nonatomic, strong) NSDecimalNumber * _Nullable minimumAmountDue;
/// Minimum amount due currency ISO code (optional)
@property (nonatomic, copy) NSString * _Nullable minimumAmountDueCurrency;
/// Next refresh date by the aggregator (optional)
@property (nonatomic, copy) NSDate * _Nullable nextRefresh;
/// Nickname given to the account for display and identification purposes (optional)
@property (nonatomic, copy) NSString * _Nullable nickName;
/// URL of product details page (optional); Nil if product not selected
@property (nonatomic, copy) NSString * _Nullable productDetailsPageURL;
/// ID of selected Product for this Account (optional, -1 is not selected)
@property (nonatomic) int64_t productID;
/// Name of selected Product for this Account (optional); Nil if product not selected
@property (nonatomic, copy) NSString * _Nullable productName;
/// ProductsAvailable. True if CDR Products are available for this Account
@property (nonatomic) BOOL productsAvailable;
/// Parent provider account ID
@property (nonatomic) int64_t providerAccountID;
/// Name of the provider convenience property (optional)
@property (nonatomic, copy) NSString * _Nullable providerName;
/// Raw value of the refresh additional status. Use only in predicate (optional)
@property (nonatomic, copy) NSString * _Nullable refreshAdditionalStatusRawValue;
/// Raw value of the refresh status. Use only in predicates
@property (nonatomic, copy) NSString * _Nonnull refreshStatusRawValue;
/// Raw value of the refresh sub status. Use only in predicate (optional)
@property (nonatomic, copy) NSString * _Nullable refreshSubStatusRawValue;
/// Total cash limit (optional)
@property (nonatomic, strong) NSDecimalNumber * _Nullable totalCashLimit;
/// Total cash limit currency ISO code (optional)
@property (nonatomic, copy) NSString * _Nullable totalCashLimitCurrency;
/// Total credit line (optional)
@property (nonatomic, strong) NSDecimalNumber * _Nullable totalCreditLine;
/// Total credit line currency (optional)
@property (nonatomic, copy) NSString * _Nullable totalCreditLineCurrency;
/// Account balance tiers (optional)
@property (nonatomic, copy) NSSet<AccountBalanceTier *> * _Nullable balanceTiers;
/// Associated bills (optional)
@property (nonatomic, copy) NSSet<Bill *> * _Nullable bills;
/// Associated goals (optional)
@property (nonatomic, copy) NSSet<Goal *> * _Nullable goals;
/// CDR Product Informations  (optional)
@property (nonatomic, copy) NSSet<CDRProductInformation *> * _Nullable productInformations;
/// Parent provider account
@property (nonatomic, strong) ProviderAccount * _Nullable providerAccount;
/// Balance reports
@property (nonatomic, copy) NSSet<ReportAccountBalance *> * _Nullable reports;
/// Child transactions
@property (nonatomic, copy) NSSet<Transaction *> * _Nullable transactions;
/// Associated cards
@property (nonatomic, copy) NSSet<Card *> * _Nullable cards;
@end


/// Account Balance Tier
/// Represents what tier a certain balance on an account falls into. Used for <code>Account.AccountType.creditScore</code>
SWIFT_CLASS("_TtC9FrolloSDK18AccountBalanceTier")
@interface AccountBalanceTier : NSManagedObject
- (nonnull instancetype)initWithEntity:(NSEntityDescription * _Nonnull)entity insertIntoManagedObjectContext:(NSManagedObjectContext * _Nullable)context OBJC_DESIGNATED_INITIALIZER;
@end


@interface AccountBalanceTier (SWIFT_EXTENSION(FrolloSDK))
/// Maximum balance value included in this tier (optional)
@property (nonatomic, strong) NSDecimalNumber * _Nullable maximum;
/// Minimum balance value included in this tier (optional)
@property (nonatomic, strong) NSDecimalNumber * _Nullable minimum;
/// Name of this tier (optional)
@property (nonatomic, copy) NSString * _Nullable name;
/// Parent account
@property (nonatomic, strong) Account * _Nullable account;
@end


/// Contact
/// Core Data represenation of a payment contact
SWIFT_CLASS("_TtC9FrolloSDK7Contact")
@interface Contact : NSManagedObject
- (nonnull instancetype)initWithEntity:(NSEntityDescription * _Nonnull)entity insertIntoManagedObjectContext:(NSManagedObjectContext * _Nullable)context OBJC_DESIGNATED_INITIALIZER;
@end


/// BPAY Contact
/// Contact of type BPAY and associated properties
SWIFT_CLASS("_TtC9FrolloSDK11BPAYContact")
@interface BPAYContact : Contact
- (nonnull instancetype)initWithEntity:(NSEntityDescription * _Nonnull)entity insertIntoManagedObjectContext:(NSManagedObjectContext * _Nullable)context OBJC_DESIGNATED_INITIALIZER;
@end


@interface BPAYContact (SWIFT_EXTENSION(FrolloSDK))
/// Biller code of the BPAY contact
@property (nonatomic, copy) NSString * _Nonnull billerCode;
/// CRN of the BPAY contact
@property (nonatomic, copy) NSString * _Nonnull crn;
/// Biller name of the BPAY contact
@property (nonatomic, copy) NSString * _Nonnull billerName;
/// The type of CRN; defaulted to fixed crn,
@property (nonatomic, copy) NSString * _Nonnull crnTypeRawValue;
@end


/// Bill
/// Core Data model of the bill.
SWIFT_CLASS("_TtC9FrolloSDK4Bill")
@interface Bill : NSManagedObject
- (nonnull instancetype)initWithEntity:(NSEntityDescription * _Nonnull)entity insertIntoManagedObjectContext:(NSManagedObjectContext * _Nullable)context OBJC_DESIGNATED_INITIALIZER;
@end

@class BillPayment;

@interface Bill (SWIFT_EXTENSION(FrolloSDK))
/// Add a payment relationship
- (void)addPaymentsObject:(BillPayment * _Nonnull)value;
/// Remove a payment relationship
- (void)removePaymentsObject:(BillPayment * _Nonnull)value;
/// Add payment relationships
- (void)addPayments:(NSSet<BillPayment *> * _Nonnull)values;
/// Remove payment relationships
- (void)removePayments:(NSSet<BillPayment *> * _Nonnull)values;
@end


@interface Bill (SWIFT_EXTENSION(FrolloSDK))
/// Add a transaction relationship
- (void)addTransactionsObject:(Transaction * _Nonnull)value;
/// Remove a transaction relationship
- (void)removeTransactionsObject:(Transaction * _Nonnull)value;
/// Add transaction relationships
- (void)addTransactions:(NSSet<Transaction *> * _Nonnull)values;
/// Remove transaction relationships
- (void)removeTransactions:(NSSet<Transaction *> * _Nonnull)values;
@end

@class Merchant;
@class TransactionCategory;

@interface Bill (SWIFT_EXTENSION(FrolloSDK))
/// Account ID bill is associated with
@property (nonatomic) int64_t accountID;
/// Average amount due
@property (nonatomic, strong) NSDecimalNumber * _Nonnull averageAmount;
/// Unique ID of the bill
@property (nonatomic) int64_t billID;
/// Raw value of the bill type. Use only in predicates
@property (nonatomic, copy) NSString * _Nonnull billTypeRawValue;
/// Additional details about the bill (Optional)
@property (nonatomic, copy) NSString * _Nullable details;
/// Current due amount
@property (nonatomic, strong) NSDecimalNumber * _Nonnull dueAmount;
/// Raw value of the end date. Use only in predicates (Optional)
@property (nonatomic, copy) NSString * _Nullable endDateString;
/// Raw value of the frequency. Use only in predicates
@property (nonatomic, copy) NSString * _Nonnull frequencyRawValue;
/// Last amount due (Optional)
@property (nonatomic, strong) NSDecimalNumber * _Nullable lastAmount;
/// Raw value of the last payment date. Use only in predicates (Optional)
@property (nonatomic, copy) NSString * _Nullable lastPaymentDateString;
/// Merchant ID bill is associated with
@property (nonatomic) int64_t merchantID;
/// Name of the bill (Optional)
@property (nonatomic, copy) NSString * _Nullable name;
/// Raw value of the next payment due date. Use only in predicates
@property (nonatomic, copy) NSString * _Nonnull nextPaymentDateString;
/// User notes about the bill (Optional)
@property (nonatomic, copy) NSString * _Nullable notes;
/// Raw value of the bill payment status. Use only in predicates
@property (nonatomic, copy) NSString * _Nonnull paymentStatusRawValue;
/// Raw value of the status. Use only in predicates
@property (nonatomic, copy) NSString * _Nonnull statusRawValue;
/// Transaction Category ID associated with the bill
@property (nonatomic) int64_t transactionCategoryID;
/// Account associated with the bill (Optional)
@property (nonatomic, strong) Account * _Nullable account;
/// Merchant associated with the bill (Optional)
@property (nonatomic, strong) Merchant * _Nullable merchant;
/// Transaction Category associated with the bill (Optional)
@property (nonatomic, strong) TransactionCategory * _Nullable transactionCategory;
/// Child bill payments
@property (nonatomic, copy) NSSet<BillPayment *> * _Nullable payments;
/// Associated transactions
@property (nonatomic, copy) NSSet<Transaction *> * _Nullable transactions;
@end


/// Bill Payment
/// Core Data model of the bill payment.
SWIFT_CLASS("_TtC9FrolloSDK11BillPayment")
@interface BillPayment : NSManagedObject
- (nonnull instancetype)initWithEntity:(NSEntityDescription * _Nonnull)entity insertIntoManagedObjectContext:(NSManagedObjectContext * _Nullable)context OBJC_DESIGNATED_INITIALIZER;
@end


@interface BillPayment (SWIFT_EXTENSION(FrolloSDK))
/// Unique ID of the bill payment
@property (nonatomic) int64_t billPaymentID;
/// Bill ID of the parent bill
@property (nonatomic) int64_t billID;
/// Name of the bill
@property (nonatomic, copy) NSString * _Nonnull name;
/// Merchant ID associated with the bill payment
@property (nonatomic) int64_t merchantID;
/// Raw value of the date. Use only in predicates
@property (nonatomic, copy) NSString * _Nonnull dateString;
/// Raw value of the payment status. Use only in predicates
@property (nonatomic, copy) NSString * _Nonnull paymentStatusRawValue;
/// Raw value of the frequency of bill payments. Use only in predicates
@property (nonatomic, copy) NSString * _Nonnull frequencyRawValue;
/// Amount of the payment (Optional)
@property (nonatomic, strong) NSDecimalNumber * _Nullable amount;
/// Parent bill (Optional)
@property (nonatomic, strong) Bill * _Nullable bill;
@end


/// Budget
/// Core Data model of the budget.
SWIFT_CLASS("_TtC9FrolloSDK6Budget")
@interface Budget : NSManagedObject
- (nonnull instancetype)initWithEntity:(NSEntityDescription * _Nonnull)entity insertIntoManagedObjectContext:(NSManagedObjectContext * _Nullable)context OBJC_DESIGNATED_INITIALIZER;
@end


@class BudgetPeriod;

@interface Budget (SWIFT_EXTENSION(FrolloSDK))
/// Add a budget period relationship
- (void)addPeriodsObject:(BudgetPeriod * _Nonnull)value;
/// Remove a budget period relationship
- (void)removePeriodsObject:(BudgetPeriod * _Nonnull)value;
/// Add budget period relationships
- (void)addPeriods:(NSSet<BudgetPeriod *> * _Nonnull)values;
/// Remove budget period relationships
- (void)removePeriods:(NSSet<BudgetPeriod *> * _Nonnull)values;
@end


@interface Budget (SWIFT_EXTENSION(FrolloSDK))
/// Unique ID of the budget
@property (nonatomic) int64_t budgetID;
/// User ID
@property (nonatomic) int64_t userID;
/// Returns true if the budget is active
@property (nonatomic) BOOL isCurrent;
/// Raw value for the type. Only use in predicates
@property (nonatomic, copy) NSString * _Nonnull typeRawValue;
/// Value of the <code>budgetType</code>. <code>name</code> if budget category and <code>id</code> if category and merchant.
@property (nonatomic, copy) NSString * _Nonnull typeValue;
/// Raw value of tracking status. Only use in predicates
@property (nonatomic, copy) NSString * _Nonnull trackingStatusRawValue;
/// Raw value of the tracking type. Use only in predicates
@property (nonatomic, copy) NSString * _Nonnull trackingTypeRawValue;
/// Raw value of status. Only use in predicates
@property (nonatomic, copy) NSString * _Nonnull statusRawValue;
/// Raw value of the frequency. Only use in predicates
@property (nonatomic, copy) NSString * _Nonnull frequencyRawValue;
/// Currency of the budget
@property (nonatomic, copy) NSString * _Nonnull currency;
/// Current amount of the Budget
@property (nonatomic, strong) NSDecimalNumber * _Nonnull currentAmount;
/// The amount you want each BudgetPeriod to be.
@property (nonatomic, strong) NSDecimalNumber * _Nonnull periodAmount;
/// Raw value for the image URL (Optional)
@property (nonatomic, copy) NSString * _Nullable imageURLString;
/// The date at which to start the Budget (Optional)
@property (nonatomic, copy) NSString * _Nullable startDateString;
/// The number of periods that belong to this Budget
@property (nonatomic) int64_t periodsCount;
/// Custom JSON metadata (optional)
@property (nonatomic, copy) NSData * _Nullable metadataRawValue;
/// Budget periods
@property (nonatomic, copy) NSSet<BudgetPeriod *> * _Nullable periods;
@end


/// Budget Period
/// Core Data model of the budget period.
SWIFT_CLASS("_TtC9FrolloSDK12BudgetPeriod")
@interface BudgetPeriod : NSManagedObject
- (nonnull instancetype)initWithEntity:(NSEntityDescription * _Nonnull)entity insertIntoManagedObjectContext:(NSManagedObjectContext * _Nullable)context OBJC_DESIGNATED_INITIALIZER;
@end



@interface BudgetPeriod (SWIFT_EXTENSION(FrolloSDK))
/// Unique ID of the budget period
@property (nonatomic) int64_t budgetPeriodID;
/// Budget ID of the parent budget
@property (nonatomic) int64_t budgetID;
/// Raw value of the start date. Use only in predicates
@property (nonatomic, copy) NSString * _Nonnull startDateString;
/// Raw value of the end date. Use only in predicates
@property (nonatomic, copy) NSString * _Nonnull endDateString;
/// Index of the period
@property (nonatomic) int64_t index;
/// Target amount to reach for the budget period
@property (nonatomic, strong) NSDecimalNumber * _Nonnull targetAmount;
/// Current amount progressed against the budget period depending on <code>trackingType</code> of the budget
@property (nonatomic, strong) NSDecimalNumber * _Nonnull currentAmount;
/// Required amount to get your targetAmount.
@property (nonatomic, strong) NSDecimalNumber * _Nonnull requiredAmount;
/// Raw value of the tracking status. Use only in predicates
@property (nonatomic, copy) NSString * _Nullable trackingStatusRawValue;
/// Budget associated with
@property (nonatomic, strong) Budget * _Nullable budget;
@end


/// CDR Product Information
/// Represents key information of CDR Product
SWIFT_CLASS("_TtC9FrolloSDK16CDRConfiguration")
@interface CDRConfiguration : NSManagedObject
- (nonnull instancetype)initWithEntity:(NSEntityDescription * _Nonnull)entity insertIntoManagedObjectContext:(NSManagedObjectContext * _Nullable)context OBJC_DESIGNATED_INITIALIZER;
@end


@interface CDRConfiguration (SWIFT_EXTENSION(FrolloSDK))
/// The email to contact for support
@property (nonatomic, copy) NSString * _Nonnull supportEmail;
/// The id of the ADR that handles CDR data
@property (nonatomic, copy) NSString * _Nonnull adrID;
/// The name of the ADR that handles CDR data
@property (nonatomic, copy) NSString * _Nonnull adrName;
/// The raw sharing durations JSON data
@property (nonatomic, copy) NSData * _Nonnull sharingDurationRawValue;
@end


/// CDR Product Information
/// Represents key information of CDR Product
SWIFT_CLASS("_TtC9FrolloSDK21CDRProductInformation")
@interface CDRProductInformation : NSManagedObject
- (nonnull instancetype)initWithEntity:(NSEntityDescription * _Nonnull)entity insertIntoManagedObjectContext:(NSManagedObjectContext * _Nullable)context OBJC_DESIGNATED_INITIALIZER;
@end


@interface CDRProductInformation (SWIFT_EXTENSION(FrolloSDK))
/// name of the product information
@property (nonatomic, copy) NSString * _Nullable name;
/// value of the product information
@property (nonatomic, copy) NSString * _Nullable value;
/// parent account
@property (nonatomic, strong) Account * _Nullable account;
@end


/// Card
/// Core Data represenation of a Card
SWIFT_CLASS("_TtC9FrolloSDK4Card")
@interface Card : NSManagedObject
- (nonnull instancetype)initWithEntity:(NSEntityDescription * _Nonnull)entity insertIntoManagedObjectContext:(NSManagedObjectContext * _Nullable)context OBJC_DESIGNATED_INITIALIZER;
@end


@interface Card (SWIFT_EXTENSION(FrolloSDK))
/// Unique identifier of the card
@property (nonatomic) int64_t cardID;
/// ID of the account to which the card is associated with
@property (nonatomic) int64_t accountID;
/// Name of the card
@property (nonatomic, copy) NSString * _Nonnull name;
/// Nick name of the card (optional)
@property (nonatomic, copy) NSString * _Nullable nickName;
/// The current status of the card; eg active, pending etc
@property (nonatomic, copy) NSString * _Nonnull statusRawValue;
/// The design type of the card
@property (nonatomic, copy) NSString * _Nonnull designTypeRawValue;
/// Date the card was created
@property (nonatomic, copy) NSString * _Nonnull createdDateString;
/// Account associated with the card (Optional)
@property (nonatomic, strong) Account * _Nullable account;
/// Date the card was cancelled (Optional)
@property (nonatomic, copy) NSString * _Nullable cancelledDateString;
/// Name of the card holder (Optional)
@property (nonatomic, copy) NSString * _Nullable cardholderName;
/// Date on which the card will expire (Optional)
@property (nonatomic, copy) NSString * _Nullable expiryDate;
/// Issuer of the card; eg Visa, Mastercard (Optional)
@property (nonatomic, copy) NSString * _Nullable issuerRawValue;
/// Last 4 digits of the card’s Primary Account Number (Optional)
@property (nonatomic, copy) NSString * _Nullable panLastDigits;
/// Type of the card; eg credit, debit (Optional)
@property (nonatomic, copy) NSString * _Nullable typeRawValue;
@end


/// Consent
/// Core Data model of the account.
SWIFT_CLASS("_TtC9FrolloSDK7Consent")
@interface Consent : NSManagedObject
- (nonnull instancetype)initWithEntity:(NSEntityDescription * _Nonnull)entity insertIntoManagedObjectContext:(NSManagedObjectContext * _Nullable)context OBJC_DESIGNATED_INITIALIZER;
@end

@class Provider;

@interface Consent (SWIFT_EXTENSION(FrolloSDK))
/// Unique ID of the consent
@property (nonatomic) int64_t consentID;
/// Raw value for the additional permissions. Use only in predicates (Optional)
@property (nonatomic, copy) NSData * _Nullable additionalPermissionsRawValue;
/// The url used to login with the provider (Optional)
@property (nonatomic, copy) NSString * _Nullable authorizationURLString;
/// The confirmation PDF generated after the consent becomes active (Optional)
@property (nonatomic, copy) NSString * _Nullable confirmationPDFURLString;
/// Raw value for the permissions. Use only in predicates (Optional)
@property (nonatomic, copy) NSData * _Nullable permissionObjectsRawValue;
/// The provider account ID related to the consent
@property (nonatomic) int64_t providerAccountID;
/// The provider ID related to the consent
@property (nonatomic) int64_t providerID;
/// The duration (in seconds) of the sharing
@property (nonatomic) int64_t sharingDurationRawValue;
/// Raw value of the consent started at date. Use only in predicates (Optional)
@property (nonatomic, copy) NSString * _Nullable sharingStartedAtRawValue;
/// Raw value of the consent stopped at date. Use only in predicates (Optional)
@property (nonatomic, copy) NSString * _Nullable sharingStoppedAtRawValue;
/// Raw value for the status. Use only in predicates
@property (nonatomic, copy) NSString * _Nonnull statusRawValue;
/// The PDF URL string that contains the withdrawal information (Optional)
@property (nonatomic, copy) NSString * _Nullable withdrawalPDFURLString;
/// The provider associated with the consent (Optional)
@property (nonatomic, strong) Provider * _Nullable provider;
/// The provider account associated with the consent (Optional)
@property (nonatomic, strong) ProviderAccount * _Nullable providerAccount;
@end



@interface Contact (SWIFT_EXTENSION(FrolloSDK))
/// Unique identifier of the contact
@property (nonatomic) int64_t contactID;
/// Name of the contact (optional)
@property (nonatomic, copy) NSString * _Nullable name;
/// Nick name of the contact
@property (nonatomic, copy) NSString * _Nonnull nickName;
/// Description of the contact (Optional)
@property (nonatomic, copy) NSString * _Nullable contactDescription;
/// The type of payment method of contact; eg Biller, PayID etc
@property (nonatomic, copy) NSString * _Nonnull contactTypeRawValue;
/// Date the contact was created
@property (nonatomic, copy) NSString * _Nonnull createdDateString;
/// Date the contact was last updated
@property (nonatomic, copy) NSString * _Nonnull modifiedDateString;
/// Raw value for the associated provider account IDs
@property (nonatomic, copy) NSData * _Nullable providerAccountIDsRawValue;
/// Is contact verified or not
@property (nonatomic) BOOL isVerified;
@end



/// Goal
/// Core Data model of the goal.
SWIFT_CLASS("_TtC9FrolloSDK4Goal")
@interface Goal : NSManagedObject
- (nonnull instancetype)initWithEntity:(NSEntityDescription * _Nonnull)entity insertIntoManagedObjectContext:(NSManagedObjectContext * _Nullable)context OBJC_DESIGNATED_INITIALIZER;
@end

@class GoalPeriod;

@interface Goal (SWIFT_EXTENSION(FrolloSDK))
/// Add a goal period relationship
- (void)addPeriodsObject:(GoalPeriod * _Nonnull)value;
/// Remove a goal period relationship
- (void)removePeriodsObject:(GoalPeriod * _Nonnull)value;
/// Add goal period relationships
- (void)addPeriods:(NSSet<GoalPeriod *> * _Nonnull)values;
/// Remove goal period relationships
- (void)removePeriods:(NSSet<GoalPeriod *> * _Nonnull)values;
@end


@interface Goal (SWIFT_EXTENSION(FrolloSDK))
/// Account ID goal is associated with if tracking automatically (Optional)
@property (nonatomic) int64_t accountID;
/// Currency ISO code of the goal
@property (nonatomic, copy) NSString * _Nonnull currency;
/// Current amount progressed against the goal. Depending on <code>trackingType</code> this will include credits and/or debits towards the goal
@property (nonatomic, strong) NSDecimalNumber * _Nonnull currentAmount;
/// Description of the goal (Optional)
@property (nonatomic, copy) NSString * _Nullable details;
/// Raw value of the end date. Use only in predicates
@property (nonatomic, copy) NSString * _Nonnull endDateString;
/// Raw value of the estimated end date. Use only in predicates (Optional)
@property (nonatomic, copy) NSString * _Nullable estimatedEndDateString;
/// Estimated amount saved at the end of the goal at the current rate of progress (Optional)
@property (nonatomic, strong) NSDecimalNumber * _Nullable estimatedTargetAmount;
/// Raw value of the frequence. Use only in predicates
@property (nonatomic, copy) NSString * _Nonnull frequencyRawValue;
/// Unique ID of the goal
@property (nonatomic) int64_t goalID;
/// Raw value for the image URL (Optional)
@property (nonatomic, copy) NSString * _Nullable imageURLString;
/// Raw value for the metadata JSON associated with the goal (Optional)
@property (nonatomic, copy) NSData * _Nullable metadataRawValue;
/// Name of the goal
@property (nonatomic, copy) NSString * _Nonnull name;
/// Amount to be saved each period
@property (nonatomic, strong) NSDecimalNumber * _Nonnull periodAmount;
/// Amount of periods until the goal is completed
@property (nonatomic) int64_t periodCount;
/// Starting amount of the goal
@property (nonatomic, strong) NSDecimalNumber * _Nonnull startAmount;
/// Raw value of the start date. Use only in predicates
@property (nonatomic, copy) NSString * _Nonnull startDateString;
/// Raw value of the status. Use only in predicates
@property (nonatomic, copy) NSString * _Nonnull statusRawValue;
/// Target amount to reach for the goal
@property (nonatomic, strong) NSDecimalNumber * _Nonnull targetAmount;
/// Raw value of the target. Use only in predicates
@property (nonatomic, copy) NSString * _Nonnull targetRawValue;
/// Raw value of the tracking status. Use only in predicates
@property (nonatomic, copy) NSString * _Nonnull trackingStatusRawValue;
/// Raw value of the tracking type. Use only in predicates
@property (nonatomic, copy) NSString * _Nonnull trackingTypeRawValue;
/// Account associated with the goal (Optional)
@property (nonatomic, strong) Account * _Nullable account;
/// Goal periods
@property (nonatomic, copy) NSSet<GoalPeriod *> * _Nullable periods;
@end


/// Goal Period
/// Core Data model of the goal period.
SWIFT_CLASS("_TtC9FrolloSDK10GoalPeriod")
@interface GoalPeriod : NSManagedObject
- (nonnull instancetype)initWithEntity:(NSEntityDescription * _Nonnull)entity insertIntoManagedObjectContext:(NSManagedObjectContext * _Nullable)context OBJC_DESIGNATED_INITIALIZER;
@end


@interface GoalPeriod (SWIFT_EXTENSION(FrolloSDK))
/// Unique ID of the goal period
@property (nonatomic) int64_t goalPeriodID;
/// Goal ID of the parent goal
@property (nonatomic) int64_t goalID;
/// Raw value of the start date. Use only in predicates
@property (nonatomic, copy) NSString * _Nonnull startDateString;
/// Raw value of the end date. Use only in predicates
@property (nonatomic, copy) NSString * _Nonnull endDateString;
/// Index of the period
@property (nonatomic) int64_t index;
/// Target amount to reach for the goal period
@property (nonatomic, strong) NSDecimalNumber * _Nonnull targetAmount;
/// Current amount progressed against the goal period. Depending on <code>trackingType</code> of the goal this will include credits and/or debits towards the goal
@property (nonatomic, strong) NSDecimalNumber * _Nonnull currentAmount;
/// Required amount for the goal period to get back or stay on track with the goal
@property (nonatomic, strong) NSDecimalNumber * _Nonnull requiredAmount;
/// Raw value of the tracking status. Use only in predicates
@property (nonatomic, copy) NSString * _Nullable trackingStatusRawValue;
/// Goal periods are associated with
@property (nonatomic, strong) Goal * _Nullable goal;
@end


/// User Model
/// Stores information about the user and their profile
SWIFT_CLASS("_TtC9FrolloSDK5Image")
@interface Image : NSManagedObject
- (nonnull instancetype)initWithEntity:(NSEntityDescription * _Nonnull)entity insertIntoManagedObjectContext:(NSManagedObjectContext * _Nullable)context OBJC_DESIGNATED_INITIALIZER;
@end


@interface Image (SWIFT_EXTENSION(FrolloSDK))
/// Unique ID of the image
@property (nonatomic) int64_t imageID;
/// The name of the image
@property (nonatomic, copy) NSString * _Nonnull name;
/// The small url of the image
@property (nonatomic, copy) NSString * _Nonnull smallURLString;
/// The large url of the image
@property (nonatomic, copy) NSString * _Nonnull largeURLString;
/// The types of the image
@property (nonatomic, copy) NSString * _Nonnull typesRawValue;
@end


/// International Contact
/// Contact of type International and associated properties
SWIFT_CLASS("_TtC9FrolloSDK20InternationalContact")
@interface InternationalContact : Contact
- (nonnull instancetype)initWithEntity:(NSEntityDescription * _Nonnull)entity insertIntoManagedObjectContext:(NSManagedObjectContext * _Nullable)context OBJC_DESIGNATED_INITIALIZER;
@end


@interface InternationalContact (SWIFT_EXTENSION(FrolloSDK))
/// Name of the International contact
@property (nonatomic, copy) NSString * _Nullable internationalContactName;
/// Country of the International contact
@property (nonatomic, copy) NSString * _Nonnull internationalContactCountry;
/// Description of the International contact
@property (nonatomic, copy) NSString * _Nullable internationalContactMessage;
/// Country of bank of the International contact
@property (nonatomic, copy) NSString * _Nonnull internationalBankCountry;
/// Account number of the International contact
@property (nonatomic, copy) NSString * _Nonnull internationalAccountNumber;
/// Bank Address of the International contact
@property (nonatomic, copy) NSString * _Nullable internationalBankAddress;
/// BIC of the International contact
@property (nonatomic, copy) NSString * _Nullable bic;
/// Fedwire number of the International contact
@property (nonatomic, copy) NSString * _Nullable fedwireNumber;
/// Sort code of the International contact
@property (nonatomic, copy) NSString * _Nullable sortCode;
/// Chip number of the International contact
@property (nonatomic, copy) NSString * _Nullable chipNumber;
/// Routing number of the International contact
@property (nonatomic, copy) NSString * _Nullable routingNumber;
/// Legal entity identifier of the International contact
@property (nonatomic, copy) NSString * _Nullable legalEntityId;
@end


/// Merchant
/// Core Data representation of a merchant object
SWIFT_CLASS("_TtC9FrolloSDK8Merchant")
@interface Merchant : NSManagedObject
- (nonnull instancetype)initWithEntity:(NSEntityDescription * _Nonnull)entity insertIntoManagedObjectContext:(NSManagedObjectContext * _Nullable)context OBJC_DESIGNATED_INITIALIZER;
@end


@interface Merchant (SWIFT_EXTENSION(FrolloSDK))
/// Add transaction current report relationships
- (void)addCurrentReports:(NSSet * _Nonnull)values;
/// Remove transaction current report relationships
- (void)removeCurrentReports:(NSSet * _Nonnull)values;
@end


@interface Merchant (SWIFT_EXTENSION(FrolloSDK))
/// Add transaction history report relationships
- (void)addHistoryReports:(NSSet * _Nonnull)values;
/// Remove transaction history report relationships
- (void)removeHistoryReports:(NSSet * _Nonnull)values;
@end


@interface Merchant (SWIFT_EXTENSION(FrolloSDK))
/// Add a transaction relationship
- (void)addTransactionsObject:(Transaction * _Nonnull)value;
/// Remove a transaction relationship
- (void)removeTransactionsObject:(Transaction * _Nonnull)value;
/// Add transaction relationships
- (void)addTransactions:(NSSet<Transaction *> * _Nonnull)values;
/// Remove transaction relationships
- (void)removeTransactions:(NSSet<Transaction *> * _Nonnull)values;
@end


@interface Merchant (SWIFT_EXTENSION(FrolloSDK))
/// Add a bill relationship
- (void)addBillsObject:(Bill * _Nonnull)value;
/// Remove a bill relationship
- (void)removeBillsObject:(Bill * _Nonnull)value;
/// Add bill relationships
- (void)addBills:(NSSet<Bill *> * _Nonnull)values;
/// Remove bill relationships
- (void)removeBills:(NSSet<Bill *> * _Nonnull)values;
@end


@interface Merchant (SWIFT_EXTENSION(FrolloSDK))
/// Unique ID for the merchant
@property (nonatomic) int64_t merchantID;
/// Raw value of the merchant type. Use only in predicates (optional)
@property (nonatomic, copy) NSString * _Nullable merchantTypeRawValue;
/// Name of the merchant
@property (nonatomic, copy) NSString * _Nonnull name;
/// Raw value of the small logo URL string (optional)
@property (nonatomic, copy) NSString * _Nullable smallLogoURLString;
/// Associated bills (optional)
@property (nonatomic, copy) NSSet<Bill *> * _Nullable bills;
/// Related transaction history reports
@property (nonatomic, strong) NSSet * _Nullable historyReports;
/// Related transaction current reports
@property (nonatomic, strong) NSSet * _Nullable currentReports;
/// Related transactions
@property (nonatomic, copy) NSSet<Transaction *> * _Nullable transactions;
@end


/// Message
/// Core Data represenation of a message
SWIFT_CLASS("_TtC9FrolloSDK7Message")
@interface Message : NSManagedObject
- (nonnull instancetype)initWithEntity:(NSEntityDescription * _Nonnull)entity insertIntoManagedObjectContext:(NSManagedObjectContext * _Nullable)context OBJC_DESIGNATED_INITIALIZER;
@end


@interface Message (SWIFT_EXTENSION(FrolloSDK))
/// Unique identifier of the message
@property (nonatomic) int64_t messageID;
/// Event name associated with the message
@property (nonatomic, copy) NSString * _Nonnull event;
/// Title of the message (optional)
@property (nonatomic, copy) NSString * _Nullable title;
/// Unique ID of the user event associated with the message
@property (nonatomic) int64_t userEventID;
/// Placement order of the message - higher is more important
@property (nonatomic) int64_t placement;
/// Persists. Indicates if the message can be marked read or not
@property (nonatomic) BOOL persists;
/// Read/unread state
@property (nonatomic) BOOL read;
/// Interacted. Should be updated if the user interacted with the message
@property (nonatomic) BOOL interacted;
/// Raw value for the content type. Use only in predicates (optional)
@property (nonatomic, copy) NSString * _Nullable contentTypeRawValue;
/// Raw value for the types the message is associated with. Use only in predicates using <code>CONTAINS '|<type>|'</code> to ensure unique matches (optional)
@property (nonatomic, copy) NSString * _Nonnull typesRawValue;
/// Title of the action (optional)
@property (nonatomic, copy) NSString * _Nullable actionTitle;
/// Raw value of the action URL. Use only in predicates (optional)
@property (nonatomic, copy) NSString * _Nullable actionURLString;
/// Raw value of open mode. Determines how  link should be opened.
@property (nonatomic, copy) NSString * _Nullable openModeRawValue;
/// Specifies whether the message will be dismissed automatically or manually. True means automatically. False means manually
@property (nonatomic) BOOL autoDismiss;
/// Raw value for the metadata JSON associated with the message (Optional)
@property (nonatomic, copy) NSData * _Nullable metaDataRawValue;
@end


/// Message HTML
/// Message with HTML content type and associated properties
SWIFT_CLASS("_TtC9FrolloSDK11MessageHTML")
@interface MessageHTML : Message
- (nonnull instancetype)initWithEntity:(NSEntityDescription * _Nonnull)entity insertIntoManagedObjectContext:(NSManagedObjectContext * _Nullable)context OBJC_DESIGNATED_INITIALIZER;
@end


@interface MessageHTML (SWIFT_EXTENSION(FrolloSDK))
/// Footer content (optional)
@property (nonatomic, copy) NSString * _Nullable footer;
/// Header content (optional)
@property (nonatomic, copy) NSString * _Nullable header;
/// HTML content to be rendered
@property (nonatomic, copy) NSString * _Nonnull main;
@end


/// Message Image
/// Message with image content type and associated properties
SWIFT_CLASS("_TtC9FrolloSDK12MessageImage")
@interface MessageImage : Message
- (nonnull instancetype)initWithEntity:(NSEntityDescription * _Nonnull)entity insertIntoManagedObjectContext:(NSManagedObjectContext * _Nullable)context OBJC_DESIGNATED_INITIALIZER;
@end


@interface MessageImage (SWIFT_EXTENSION(FrolloSDK))
/// Height of the image in pixels
@property (nonatomic) double height;
/// Width of the image in pixels
@property (nonatomic) double width;
/// Raw value for the image URL
@property (nonatomic, copy) NSString * _Nonnull urlString;
@end


/// Message Text
/// Message with text content type and associated properties
SWIFT_CLASS("_TtC9FrolloSDK11MessageText")
@interface MessageText : Message
- (nonnull instancetype)initWithEntity:(NSEntityDescription * _Nonnull)entity insertIntoManagedObjectContext:(NSManagedObjectContext * _Nullable)context OBJC_DESIGNATED_INITIALIZER;
@end


@interface MessageText (SWIFT_EXTENSION(FrolloSDK))
/// Design type indicating how the message should be rendered
@property (nonatomic, copy) NSString * _Nonnull designType;
/// Footer content (optional)
@property (nonatomic, copy) NSString * _Nullable footer;
/// Header content (optional)
@property (nonatomic, copy) NSString * _Nullable header;
/// Raw value of the image URL. Use only in predicates (optional)
@property (nonatomic, copy) NSString * _Nullable imageURLString;
/// Text body content (optional)
@property (nonatomic, copy) NSString * _Nullable text;
@end


/// Message Video
/// Message with video content type and associated properties
SWIFT_CLASS("_TtC9FrolloSDK12MessageVideo")
@interface MessageVideo : Message
- (nonnull instancetype)initWithEntity:(NSEntityDescription * _Nonnull)entity insertIntoManagedObjectContext:(NSManagedObjectContext * _Nullable)context OBJC_DESIGNATED_INITIALIZER;
@end


@interface MessageVideo (SWIFT_EXTENSION(FrolloSDK))
/// Height in pixels of the video
@property (nonatomic) double height;
/// Width in pixels of the video
@property (nonatomic) double width;
/// Default mute state of the video
@property (nonatomic) BOOL muted;
/// Video should autoplay
@property (nonatomic) BOOL autoplay;
/// Video should autoplay while the device is on cellular data
@property (nonatomic) BOOL autoplayCellular;
/// Raw value for the placeholder image to display while video is loading (optional)
@property (nonatomic, copy) NSString * _Nullable iconURLString;
/// Raw value for the video URL
@property (nonatomic, copy) NSString * _Nonnull urlString;
@end



/// PayAnyone Contact
/// Contact of type Pay Anyone and associated properties
SWIFT_CLASS("_TtC9FrolloSDK16PayAnyoneContact")
@interface PayAnyoneContact : Contact
- (nonnull instancetype)initWithEntity:(NSEntityDescription * _Nonnull)entity insertIntoManagedObjectContext:(NSManagedObjectContext * _Nullable)context OBJC_DESIGNATED_INITIALIZER;
@end


@interface PayAnyoneContact (SWIFT_EXTENSION(FrolloSDK))
/// Account name of the contact
@property (nonatomic, copy) NSString * _Nonnull accountHolder;
/// BSB of the contact
@property (nonatomic, copy) NSString * _Nonnull bsb;
/// Account number of the contact
@property (nonatomic, copy) NSString * _Nonnull accountNumber;
@end


/// Pay Day
/// Core data model of pay day
SWIFT_CLASS("_TtC9FrolloSDK6PayDay")
@interface PayDay : NSManagedObject
- (nonnull instancetype)initWithEntity:(NSEntityDescription * _Nonnull)entity insertIntoManagedObjectContext:(NSManagedObjectContext * _Nullable)context OBJC_DESIGNATED_INITIALIZER;
@end


@interface PayDay (SWIFT_EXTENSION(FrolloSDK))
/// Raw value of the last pay day date. Use only in predicates (Optional)
@property (nonatomic, copy) NSString * _Nullable lastDateString;
/// Raw value of the next pay day date. Use only in predicates (Optional)
@property (nonatomic, copy) NSString * _Nullable nextDateString;
/// Raw value of the frequence. Use only in predicates
@property (nonatomic, copy) NSString * _Nonnull periodRawValue;
/// Raw value of the status. Use only in predicates
@property (nonatomic, copy) NSString * _Nonnull statusRawValue;
@end


/// PayID Contact
/// Contact of type PayID and associated properties
SWIFT_CLASS("_TtC9FrolloSDK12PayIDContact")
@interface PayIDContact : Contact
- (nonnull instancetype)initWithEntity:(NSEntityDescription * _Nonnull)entity insertIntoManagedObjectContext:(NSManagedObjectContext * _Nullable)context OBJC_DESIGNATED_INITIALIZER;
@end


@interface PayIDContact (SWIFT_EXTENSION(FrolloSDK))
/// PayID value of the contact
@property (nonatomic, copy) NSString * _Nonnull payID;
/// Name of the PayID contact
@property (nonatomic, copy) NSString * _Nullable payIDName;
/// The type of payID; eg Phone numner, email etc
@property (nonatomic, copy) NSString * _Nonnull payIDTypeRawValue;
@end


/// Provider
/// Core Data represenation of provider of accounts
SWIFT_CLASS("_TtC9FrolloSDK8Provider")
@interface Provider : NSManagedObject
- (nonnull instancetype)initWithEntity:(NSEntityDescription * _Nonnull)entity insertIntoManagedObjectContext:(NSManagedObjectContext * _Nullable)context OBJC_DESIGNATED_INITIALIZER;
@end


@interface Provider (SWIFT_EXTENSION(FrolloSDK))
/// Add a provider account relationship
- (void)addProviderAccountsObject:(ProviderAccount * _Nonnull)value;
/// Remove a provider account relationship
- (void)removeProviderAccountsObject:(ProviderAccount * _Nonnull)value;
/// Add provider account relationships
- (void)addProviderAccounts:(NSSet<ProviderAccount *> * _Nonnull)values;
/// Remove provider account relationships
- (void)removeProviderAccounts:(NSSet<ProviderAccount *> * _Nonnull)values;
@end


@interface Provider (SWIFT_EXTENSION(FrolloSDK))
/// Add a consent relationship
- (void)addConsentsObject:(Consent * _Nonnull)value;
/// Remove a consent relationship
- (void)removeConsentsObject:(Consent * _Nonnull)value;
/// Add consent relationships
- (void)addConsents:(NSSet<Consent *> * _Nonnull)values;
/// Remove consent relationships
- (void)removeConsents:(NSSet<Consent *> * _Nonnull)values;
@end


@interface Provider (SWIFT_EXTENSION(FrolloSDK))
/// Raw value of the authentication type. Use only in predicates (optional)
@property (nonatomic, copy) NSString * _Nullable authTypeRawValue;
/// Raw value of the base URL of the provider’s website. Use only in predicates (optional)
@property (nonatomic, copy) NSString * _Nullable baseURLString;
/// Supports bank containers
@property (nonatomic) BOOL containerBank;
/// Supports bill containers
@property (nonatomic) BOOL containerBill;
/// Supports credit card containers
@property (nonatomic) BOOL containerCreditCard;
/// Supports credit score containers
@property (nonatomic) BOOL containerCreditScore;
/// Supports insurance containers
@property (nonatomic) BOOL containerInsurance;
/// Supports investment containers
@property (nonatomic) BOOL containerInvestment;
/// Supports loan containers
@property (nonatomic) BOOL containerLoan;
/// Supports real estate containers
@property (nonatomic) BOOL containerRealEstate;
/// Supports reward containers
@property (nonatomic) BOOL containerReward;
/// Supports unknown containers
@property (nonatomic) BOOL containerUnknown;
/// Encryption alias to be appended to login form values (optional)
@property (nonatomic, copy) NSString * _Nullable encryptionAlias;
/// PEM Public key to be used to encrypt login forms (optional)
@property (nonatomic, copy) NSString * _Nullable encryptionPublicKey;
/// Raw value for the encryption type supported. Use only in predicates (optional)
@property (nonatomic, copy) NSString * _Nullable encryptionTypeRawValue;
/// Raw value for the forgot password URL. Use only in predicates (optional)
@property (nonatomic, copy) NSString * _Nullable forgotPasswordURLString;
/// Help message to be displayed alongside the provider (optional)
@property (nonatomic, copy) NSString * _Nullable helpMessage;
/// Raw value for the large logo URL. Use only in predicates (optional)
@property (nonatomic, copy) NSString * _Nullable largeLogoURLString;
/// Raw value storing the login form. Do not use (optional)
@property (nonatomic, copy) NSData * _Nullable loginFormRawValue;
/// Login help message (optional)
@property (nonatomic, copy) NSString * _Nullable loginHelpMessage;
/// Raw value of the login URL. Use only in predicates (optional)
@property (nonatomic, copy) NSString * _Nullable loginURLString;
/// Raw value of the MFA type. Use only in predicates (optional)
@property (nonatomic, copy) NSString * _Nullable mfaTypeRawValue;
/// Name of the provider
@property (nonatomic, copy) NSString * _Nonnull name;
/// OAuth site
@property (nonatomic) BOOL oAuthSite;
/// Popular provider
@property (nonatomic) BOOL popular;
/// Unique ID of the provider
@property (nonatomic) int64_t providerID;
/// ProductsAvailable. True if CDR Products are available for this Provider
@property (nonatomic) BOOL productsAvailable;
/// Raw value of the small logo URL. Use only in predicates (optional)
@property (nonatomic, copy) NSString * _Nullable smallLogoURLString;
/// Raw value of the status. Use only in predicate
@property (nonatomic, copy) NSString * _Nonnull statusRawValue;
/// Raw value of the permissions array. Use only in predicate (Optional)
@property (nonatomic, copy) NSData * _Nullable permissionObjectsRawValue;
/// Raw value of the aggregator type. Use only in predicate
@property (nonatomic, copy) NSString * _Nonnull aggregatorTypeRawValue;
/// Child provider accounts
@property (nonatomic, copy) NSSet<ProviderAccount *> * _Nullable providerAccounts;
/// Child associated consents
@property (nonatomic, copy) NSSet<Consent *> * _Nullable consents;
@end


/// Provider Account
/// Core Data representation of an account login for a <code>Provider</code>
SWIFT_CLASS("_TtC9FrolloSDK15ProviderAccount")
@interface ProviderAccount : NSManagedObject
- (nonnull instancetype)initWithEntity:(NSEntityDescription * _Nonnull)entity insertIntoManagedObjectContext:(NSManagedObjectContext * _Nullable)context OBJC_DESIGNATED_INITIALIZER;
@end


@interface ProviderAccount (SWIFT_EXTENSION(FrolloSDK))
/// Add an account relationship
- (void)addAccountsObject:(Account * _Nonnull)value;
/// Remove an account relationship
- (void)removeAccountsObject:(Account * _Nonnull)value;
/// Add account relationships
- (void)addAccounts:(NSSet<Account *> * _Nonnull)values;
/// Remove account relationships
- (void)removeAccounts:(NSSet<Account *> * _Nonnull)values;
@end


@interface ProviderAccount (SWIFT_EXTENSION(FrolloSDK))
/// Add a consent relationship
- (void)addConsentsObject:(Consent * _Nonnull)value;
/// Remove a consent relationship
- (void)removeConsentsObject:(Consent * _Nonnull)value;
/// Add consent relationships
- (void)addConsents:(NSSet<Consent *> * _Nonnull)values;
/// Remove consent relationships
- (void)removeConsents:(NSSet<Consent *> * _Nonnull)values;
@end


@interface ProviderAccount (SWIFT_EXTENSION(FrolloSDK))
/// Editable by the user
@property (nonatomic) BOOL editable;
/// External ID of the object - i.e. the internal ID used by a provider
@property (nonatomic, copy) NSString * _Nullable externalID;
/// Date the aggregator last refreshed the provider account
@property (nonatomic, copy) NSDate * _Nullable lastRefreshed;
/// Raw value of login form. Do not use.
@property (nonatomic, copy) NSData * _Nullable loginFormRawValue;
/// Next refresh date by the aggregator
@property (nonatomic, copy) NSDate * _Nullable nextRefresh;
/// Unique ID for the provider account
@property (nonatomic) int64_t providerAccountID;
/// Parent provider ID
@property (nonatomic) int64_t providerID;
/// Raw value of the refresh additional status. Use only in predicates (optional)
@property (nonatomic, copy) NSString * _Nullable refreshAdditionalStatusRawValue;
/// Raw value of the refresh status. Use only in predicates
@property (nonatomic, copy) NSString * _Nonnull refreshStatusRawValue;
/// Raw value of the refresh sub status. Use only in predicates (optional)
@property (nonatomic, copy) NSString * _Nullable refreshSubStatusRawValue;
/// Child accounts
@property (nonatomic, copy) NSSet<Account *> * _Nullable accounts;
/// Parent provider
@property (nonatomic, strong) Provider * _Nullable provider;
/// Child associated consents
@property (nonatomic, copy) NSSet<Consent *> * _Nullable consents;
@end


/// Account Balance Report
/// Core Data model of an account balance report
SWIFT_CLASS("_TtC9FrolloSDK20ReportAccountBalance")
@interface ReportAccountBalance : NSManagedObject
- (nonnull instancetype)initWithEntity:(NSEntityDescription * _Nonnull)entity insertIntoManagedObjectContext:(NSManagedObjectContext * _Nullable)context OBJC_DESIGNATED_INITIALIZER;
@end


@interface ReportAccountBalance (SWIFT_EXTENSION(FrolloSDK))
/// Related account ID. -1 if none linked
@property (nonatomic) int64_t accountID;
/// Currency of the report. ISO 4217 code
@property (nonatomic, copy) NSString * _Nonnull currency;
/// Raw value of the date. Use only in predicates
@property (nonatomic, copy) NSString * _Nonnull dateString;
/// Raw value of the period. Use only in predicates
@property (nonatomic, copy) NSString * _Nonnull periodRawValue;
/// Balance of the report
@property (nonatomic, strong) NSDecimalNumber * _Nullable value;
/// Related account (Optional)
@property (nonatomic, strong) Account * _Nullable account;
@end


/// Tag
/// Core Data representation of a user tag for transactions
SWIFT_CLASS("_TtC9FrolloSDK3Tag")
@interface Tag : NSManagedObject
- (nonnull instancetype)initWithEntity:(NSEntityDescription * _Nonnull)entity insertIntoManagedObjectContext:(NSManagedObjectContext * _Nullable)context OBJC_DESIGNATED_INITIALIZER;
@end


@interface Tag (SWIFT_EXTENSION(FrolloSDK))
/// The displayed name of the tag. This field is unique
@property (nonatomic, copy) NSString * _Nonnull name;
/// The number of times this tag was used
@property (nonatomic) int64_t count;
/// The date this tag was last used
@property (nonatomic, copy) NSDate * _Nullable lastUsedAt;
/// The date this tag was created
@property (nonatomic, copy) NSDate * _Nullable createdAt;
@end


/// Transaction
/// Core Data representation of a transaction from an account
SWIFT_CLASS("_TtC9FrolloSDK11Transaction")
@interface Transaction : NSManagedObject
- (nonnull instancetype)initWithEntity:(NSEntityDescription * _Nonnull)entity insertIntoManagedObjectContext:(NSManagedObjectContext * _Nullable)context OBJC_DESIGNATED_INITIALIZER;
@end


@interface Transaction (SWIFT_EXTENSION(FrolloSDK))
/// Parent account ID
@property (nonatomic) int64_t accountID;
/// Address of the merchant line 1
@property (nonatomic, copy) NSString * _Nullable addressLine1;
/// Address of the merchant line 2
@property (nonatomic, copy) NSString * _Nullable addressLine2;
/// Address of the merchant line 3
@property (nonatomic, copy) NSString * _Nullable addressLine3;
/// Amount the transaction is for
@property (nonatomic, strong) NSDecimalNumber * _Nonnull amount;
/// Raw value of the transaction base type. Only use in predicates
@property (nonatomic, copy) NSString * _Nullable baseTypeRawValue;
/// Associated bill ID
@property (nonatomic) int64_t billID;
/// Associated goal ID
@property (nonatomic) int64_t goalID;
/// Associated bill payment ID
@property (nonatomic) int64_t billPaymentID;
/// Raw value of the budget category. Only use in predicates
@property (nonatomic, copy) NSString * _Nullable budgetCategoryRawValue;
/// Country of the merchant
@property (nonatomic, copy) NSString * _Nullable country;
/// Currency ISO code of the transaction
@property (nonatomic, copy) NSString * _Nonnull currency;
/// External ID of the object - i.e. the internal ID used by a provider
@property (nonatomic, copy) NSString * _Nullable externalID;
/// Address of the merchant formatted for display
@property (nonatomic, copy) NSString * _Nullable formattedAddress;
/// Included in budget
@property (nonatomic) BOOL included;
/// Latitude of the merchant location
@property (nonatomic) double latitude;
/// Longitude of the merchant location
@property (nonatomic) double longitude;
/// Memo or notes added to the transaction (optional)
@property (nonatomic, copy) NSString * _Nullable memo;
/// Merchant ID related to the transaction
@property (nonatomic) int64_t merchantID;
/// Original description of the transaction
@property (nonatomic, copy) NSString * _Nonnull originalDescription;
/// Phone number of the merchant
@property (nonatomic, copy) NSString * _Nullable phone;
/// Postcode of the merchant
@property (nonatomic, copy) NSString * _Nullable postcode;
/// Raw value of the post date. Use only in predicates (optional)
@property (nonatomic, copy) NSString * _Nullable postDateString;
/// Simplified description of the transaction (optional)
@property (nonatomic, copy) NSString * _Nullable simpleDescription;
/// State of the merchant
@property (nonatomic, copy) NSString * _Nullable state;
/// Raw value of the transaction status. Use only in predicates
@property (nonatomic, copy) NSString * _Nonnull statusRawValue;
/// Suburb of the merchant
@property (nonatomic, copy) NSString * _Nullable suburb;
/// Transaction Category ID related to the transaction
@property (nonatomic) int64_t transactionCategoryID;
/// Raw value of the transaction date. Use only in predicates
@property (nonatomic, copy) NSString * _Nonnull transactionDateString;
/// Unique ID of the transaction
@property (nonatomic) int64_t transactionID;
/// User determined description of the transaction (optional)
@property (nonatomic, copy) NSString * _Nullable userDescription;
/// Parent account
@property (nonatomic, strong) Account * _Nullable account;
/// Related merchant
@property (nonatomic, strong) Merchant * _Nullable merchant;
/// Related transaction category
@property (nonatomic, strong) TransactionCategory * _Nullable transactionCategory;
/// Website of the merchant
@property (nonatomic, copy) NSString * _Nullable website;
/// Related transaction tags
@property (nonatomic, copy) NSString * _Nullable userTagsRawValue;
/// Amount in string to support search by amount
@property (nonatomic, copy) NSString * _Nullable searchAmount;
/// Associated bill (Optional)
@property (nonatomic, strong) Bill * _Nullable bill;
@end


/// Transaction Category
/// Core Data representation of a transaction category giving details on what type a transaction is
SWIFT_CLASS("_TtC9FrolloSDK19TransactionCategory")
@interface TransactionCategory : NSManagedObject
- (nonnull instancetype)initWithEntity:(NSEntityDescription * _Nonnull)entity insertIntoManagedObjectContext:(NSManagedObjectContext * _Nullable)context OBJC_DESIGNATED_INITIALIZER;
@end


@interface TransactionCategory (SWIFT_EXTENSION(FrolloSDK))
/// Add transaction history report relationships
- (void)addHistoryReports:(NSSet * _Nonnull)values;
/// Remove transaction history report relationships
- (void)removeHistoryReports:(NSSet * _Nonnull)values;
@end


@interface TransactionCategory (SWIFT_EXTENSION(FrolloSDK))
/// Add transaction current report relationships
- (void)addCurrentReports:(NSSet * _Nonnull)values;
/// Remove transaction current report relationships
- (void)removeCurrentReports:(NSSet * _Nonnull)values;
@end


@interface TransactionCategory (SWIFT_EXTENSION(FrolloSDK))
/// Add a bill relationship
- (void)addBillsObject:(Bill * _Nonnull)value;
/// Remove a bill relationship
- (void)removeBillsObject:(Bill * _Nonnull)value;
/// Add bill relationships
- (void)addBills:(NSSet<Bill *> * _Nonnull)values;
/// Remove bill relationships
- (void)removeBills:(NSSet<Bill *> * _Nonnull)values;
@end


@interface TransactionCategory (SWIFT_EXTENSION(FrolloSDK))
/// Add a transaction relationship
- (void)addTransactionsObject:(Transaction * _Nonnull)value;
/// Remove a transaction relationship
- (void)removeTransactionsObject:(Transaction * _Nonnull)value;
/// Add transaction relationships
- (void)addTransactions:(NSSet<Transaction *> * _Nonnull)values;
/// Remove transaction relationships
- (void)removeTransactions:(NSSet<Transaction *> * _Nonnull)values;
@end


@interface TransactionCategory (SWIFT_EXTENSION(FrolloSDK))
/// Raw value of the transaction category type. Use only in predicates
@property (nonatomic, copy) NSString * _Nonnull categoryTypeRawValue;
/// Raw value of the default budget category. Use only in predicates
@property (nonatomic, copy) NSString * _Nonnull defaultBudgetCategoryRawValue;
/// Raw value of the icon URL. Use only in predicates
@property (nonatomic, copy) NSString * _Nullable iconURLString;
/// Name of the transaction category
@property (nonatomic, copy) NSString * _Nonnull name;
/// Placement order of the transaction for determining most popular categories. Higher is more popular
@property (nonatomic) int64_t placement;
/// Unique ID for the transaction category
@property (nonatomic) int64_t transactionCategoryID;
/// User defined category
@property (nonatomic) BOOL userDefined;
/// Associated bills (optional)
@property (nonatomic, copy) NSSet<Bill *> * _Nullable bills;
/// Related transaction history reports
@property (nonatomic, strong) NSSet * _Nullable historyReports;
/// Related transaction current reports
@property (nonatomic, strong) NSSet * _Nullable currentReports;
/// Related transactions
@property (nonatomic, copy) NSSet<Transaction *> * _Nullable transactions;
@end


/// User Model
/// Stores information about the user and their profile
SWIFT_CLASS("_TtC9FrolloSDK4User")
@interface User : NSManagedObject
- (nonnull instancetype)initWithEntity:(NSEntityDescription * _Nonnull)entity insertIntoManagedObjectContext:(NSManagedObjectContext * _Nullable)context OBJC_DESIGNATED_INITIALIZER;
@end


@interface User (SWIFT_EXTENSION(FrolloSDK))
/// Attribution ad group of the user (optional)
@property (nonatomic, copy) NSString * _Nullable attributionAdGroup;
/// Attribution campaign of the user (optional)
@property (nonatomic, copy) NSString * _Nullable attributionCampaign;
/// Attribution creative of the user (optional)
@property (nonatomic, copy) NSString * _Nullable attributionCreative;
/// Attribution network of the user (optional)
@property (nonatomic, copy) NSString * _Nullable attributionNetwork;
/// Raw value for current address. Do not use
@property (nonatomic, copy) NSData * _Nullable addressRawValue;
/// Date of birth of the user (optional)
@property (nonatomic, copy) NSDate * _Nullable dateOfBirth;
/// Email address of the user
@property (nonatomic, copy) NSString * _Nonnull email;
/// User verified their email address
@property (nonatomic) BOOL emailVerified;
/// Facebook ID associated with the user (optional)
@property (nonatomic, copy) NSString * _Nullable facebookID;
/// Raw value for features. Do not use
@property (nonatomic, copy) NSData * _Nullable featuresRawValue;
/// First name of the user
@property (nonatomic, copy) NSString * _Nullable firstName;
/// Foreign tax user
@property (nonatomic) BOOL foreignTax;
/// Raw value of the user gender. Only use in predicates (optional)
@property (nonatomic, copy) NSString * _Nullable genderRawValue;
/// Number of people in the household (optional, -1 is unknown)
@property (nonatomic) int64_t householdSize;
/// Raw value of household type. Only use in predicates (optional)
@property (nonatomic, copy) NSString * _Nullable householdTypeRawValue;
/// Raw value of industry. Only use in predicates (optional)
@property (nonatomic, copy) NSString * _Nullable industryRawValue;
/// Last name of the user (optional)
@property (nonatomic, copy) NSString * _Nullable lastName;
/// Raw value for mailing address. Do not use
@property (nonatomic, copy) NSData * _Nullable mailingAddressRawValue;
/// Mobile phone number of the user (optional)
@property (nonatomic, copy) NSString * _Nullable mobileNumber;
/// Raw value of occupation. Use only in predicates (optional)
@property (nonatomic, copy) NSString * _Nullable occupationRawValue;
/// Primary currency ISO code associated with the user
@property (nonatomic, copy) NSString * _Nonnull primaryCurrency;
/// Raw value for register steps. Do not use
@property (nonatomic, copy) NSData * _Nullable registerStepsRawValue;
/// Raw value of the user status. Use only in predicates
@property (nonatomic, copy) NSString * _Nonnull statusRawValue;
/// Tax residency (optional)
@property (nonatomic, copy) NSString * _Nullable taxResidency;
/// Tax file number (optional)
@property (nonatomic, copy) NSString * _Nullable tfn;
/// Tax identification number (optional)
@property (nonatomic, copy) NSString * _Nullable tin;
/// Unique ID of the user
@property (nonatomic) int64_t userID;
/// User has a valid password
@property (nonatomic) BOOL validPassword;
@end

#if __has_attribute(external_source_symbol)
# pragma clang attribute pop
#endif
#pragma clang diagnostic pop
#endif

#endif
